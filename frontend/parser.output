Terminals unused in grammar

   COMMA


State 40 conflicts: 2 reduce/reduce


Grammar

    0 $accept: translational_unit $end

    1 translational_unit: statement_list

    2 compound_statement: LBRACE statement_list RBRACE

    3 statement_list: statement
    4               | statement_list statement

    5 statement: compound_statement
    6          | empty_statement
    7          | declaration
    8          | declaration_assignment
    9          | assignment
   10          | conditional_statement
   11          | loop_statement_for
   12          | loop_statement_while

   13 empty_statement: SEMICOLON

   14 declaration: DT_INT IDENTIFIER SEMICOLON
   15            | DT_BOOL IDENTIFIER SEMICOLON

   16 declaration_assignment: DT_INT IDENTIFIER OPR_ASSIGNMENT arithmetic_expression SEMICOLON
   17                       | DT_BOOL IDENTIFIER OPR_ASSIGNMENT bool_expressions SEMICOLON

   18 assignment: IDENTIFIER OPR_ASSIGNMENT arithmetic_expression SEMICOLON
   19           | IDENTIFIER OPR_ASSIGNMENT bool_expressions SEMICOLON

   20 bool_expressions: boolean_expression
   21                 | relational_expression
   22                 | logical_expression

   23 arithmetic_expression: CONST_INT
   24                      | IDENTIFIER
   25                      | arithmetic_expression OPR_ADD arithmetic_expression
   26                      | arithmetic_expression OPR_SUB arithmetic_expression
   27                      | arithmetic_expression OPR_MUL arithmetic_expression
   28                      | arithmetic_expression OPR_DIV arithmetic_expression
   29                      | OPR_SUB arithmetic_expression
   30                      | LPAREN arithmetic_expression RPAREN

   31 boolean_expression: CONST_BOOL
   32                   | IDENTIFIER
   33                   | OPR_BW_NOT boolean_expression
   34                   | boolean_expression OPR_BW_AND boolean_expression
   35                   | boolean_expression OPR_BW_OR boolean_expression
   36                   | LPAREN boolean_expression RPAREN

   37 relational_expression: arithmetic_expression OPR_GT arithmetic_expression
   38                      | arithmetic_expression OPR_LT arithmetic_expression
   39                      | arithmetic_expression OPR_EQ arithmetic_expression
   40                      | arithmetic_expression OPR_NE arithmetic_expression
   41                      | arithmetic_expression OPR_GE arithmetic_expression
   42                      | arithmetic_expression OPR_LE arithmetic_expression
   43                      | LPAREN relational_expression RPAREN

   44 logical_expression: OPR_LGL_NOT bool_expressions
   45                   | bool_expressions OPR_LGL_AND bool_expressions
   46                   | bool_expressions OPR_LGL_OR bool_expressions
   47                   | LPAREN logical_expression RPAREN

   48 conditional_statement: KW_IF COLON bool_expressions compound_statement conditional_statement_else_if conditional_statement_else

   49 conditional_statement_else_if: conditional_statement_else_if KW_ELIF COLON bool_expressions compound_statement
   50                              | %empty

   51 conditional_statement_else: KW_ELSE compound_statement
   52                           | %empty

   53 loop_statement_for: KW_FOR COLON IDENTIFIER KW_IN CONST_INT COLON CONST_INT compound_statement

   54 loop_statement_while: KW_WHILE COLON bool_expressions compound_statement


Terminals, with rules where they appear

$end (0) 0
error (256)
LBRACE (258) 2
RBRACE (259) 2
LPAREN (260) 30 36 43 47
RPAREN (261) 30 36 43 47
OPR_ADD (262) 25
OPR_SUB (263) 26 29
OPR_MUL (264) 27
OPR_DIV (265) 28
NEG (266)
OPR_GT (267) 37
OPR_LT (268) 38
OPR_EQ (269) 39
OPR_NE (270) 40
OPR_GE (271) 41
OPR_LE (272) 42
OPR_BW_NOT (273) 33
OPR_BW_AND (274) 34
OPR_BW_OR (275) 35
OPR_LGL_NOT (276) 44
OPR_LGL_AND (277) 45
OPR_LGL_OR (278) 46
OPR_ASSIGNMENT (279) 16 17 18 19
SEMICOLON (280) 13 14 15 16 17 18 19
COLON (281) 48 49 53 54
COMMA (282)
DT_INT (283) 14 16
DT_BOOL (284) 15 17
KW_IF (285) 48
KW_ELIF (286) 49
KW_ELSE (287) 51
KW_FOR (288) 53
KW_IN (289) 53
KW_WHILE (290) 54
CONST_INT (291) 23 53
CONST_BOOL (292) 31
IDENTIFIER (293) 14 15 16 17 18 19 24 32 53


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
translational_unit (40)
    on left: 1, on right: 0
compound_statement (41)
    on left: 2, on right: 5 48 49 51 53 54
statement_list (42)
    on left: 3 4, on right: 1 2 4
statement (43)
    on left: 5 6 7 8 9 10 11 12, on right: 3 4
empty_statement (44)
    on left: 13, on right: 6
declaration (45)
    on left: 14 15, on right: 7
declaration_assignment (46)
    on left: 16 17, on right: 8
assignment (47)
    on left: 18 19, on right: 9
bool_expressions (48)
    on left: 20 21 22, on right: 17 19 44 45 46 48 49 54
arithmetic_expression (49)
    on left: 23 24 25 26 27 28 29 30, on right: 16 18 25 26 27 28 29
    30 37 38 39 40 41 42
boolean_expression (50)
    on left: 31 32 33 34 35 36, on right: 20 33 34 35 36
relational_expression (51)
    on left: 37 38 39 40 41 42 43, on right: 21 43
logical_expression (52)
    on left: 44 45 46 47, on right: 22 47
conditional_statement (53)
    on left: 48, on right: 10
conditional_statement_else_if (54)
    on left: 49 50, on right: 48 49
conditional_statement_else (55)
    on left: 51 52, on right: 48
loop_statement_for (56)
    on left: 53, on right: 11
loop_statement_while (57)
    on left: 54, on right: 12


State 0

    0 $accept: . translational_unit $end

    LBRACE      shift, and go to state 1
    SEMICOLON   shift, and go to state 2
    DT_INT      shift, and go to state 3
    DT_BOOL     shift, and go to state 4
    KW_IF       shift, and go to state 5
    KW_FOR      shift, and go to state 6
    KW_WHILE    shift, and go to state 7
    IDENTIFIER  shift, and go to state 8

    translational_unit      go to state 9
    compound_statement      go to state 10
    statement_list          go to state 11
    statement               go to state 12
    empty_statement         go to state 13
    declaration             go to state 14
    declaration_assignment  go to state 15
    assignment              go to state 16
    conditional_statement   go to state 17
    loop_statement_for      go to state 18
    loop_statement_while    go to state 19


State 1

    2 compound_statement: LBRACE . statement_list RBRACE

    LBRACE      shift, and go to state 1
    SEMICOLON   shift, and go to state 2
    DT_INT      shift, and go to state 3
    DT_BOOL     shift, and go to state 4
    KW_IF       shift, and go to state 5
    KW_FOR      shift, and go to state 6
    KW_WHILE    shift, and go to state 7
    IDENTIFIER  shift, and go to state 8

    compound_statement      go to state 10
    statement_list          go to state 20
    statement               go to state 12
    empty_statement         go to state 13
    declaration             go to state 14
    declaration_assignment  go to state 15
    assignment              go to state 16
    conditional_statement   go to state 17
    loop_statement_for      go to state 18
    loop_statement_while    go to state 19


State 2

   13 empty_statement: SEMICOLON .

    $default  reduce using rule 13 (empty_statement)


State 3

   14 declaration: DT_INT . IDENTIFIER SEMICOLON
   16 declaration_assignment: DT_INT . IDENTIFIER OPR_ASSIGNMENT arithmetic_expression SEMICOLON

    IDENTIFIER  shift, and go to state 21


State 4

   15 declaration: DT_BOOL . IDENTIFIER SEMICOLON
   17 declaration_assignment: DT_BOOL . IDENTIFIER OPR_ASSIGNMENT bool_expressions SEMICOLON

    IDENTIFIER  shift, and go to state 22


State 5

   48 conditional_statement: KW_IF . COLON bool_expressions compound_statement conditional_statement_else_if conditional_statement_else

    COLON  shift, and go to state 23


State 6

   53 loop_statement_for: KW_FOR . COLON IDENTIFIER KW_IN CONST_INT COLON CONST_INT compound_statement

    COLON  shift, and go to state 24


State 7

   54 loop_statement_while: KW_WHILE . COLON bool_expressions compound_statement

    COLON  shift, and go to state 25


State 8

   18 assignment: IDENTIFIER . OPR_ASSIGNMENT arithmetic_expression SEMICOLON
   19           | IDENTIFIER . OPR_ASSIGNMENT bool_expressions SEMICOLON

    OPR_ASSIGNMENT  shift, and go to state 26


State 9

    0 $accept: translational_unit . $end

    $end  shift, and go to state 27


State 10

    5 statement: compound_statement .

    $default  reduce using rule 5 (statement)


State 11

    1 translational_unit: statement_list .
    4 statement_list: statement_list . statement

    LBRACE      shift, and go to state 1
    SEMICOLON   shift, and go to state 2
    DT_INT      shift, and go to state 3
    DT_BOOL     shift, and go to state 4
    KW_IF       shift, and go to state 5
    KW_FOR      shift, and go to state 6
    KW_WHILE    shift, and go to state 7
    IDENTIFIER  shift, and go to state 8

    $default  reduce using rule 1 (translational_unit)

    compound_statement      go to state 10
    statement               go to state 28
    empty_statement         go to state 13
    declaration             go to state 14
    declaration_assignment  go to state 15
    assignment              go to state 16
    conditional_statement   go to state 17
    loop_statement_for      go to state 18
    loop_statement_while    go to state 19


State 12

    3 statement_list: statement .

    $default  reduce using rule 3 (statement_list)


State 13

    6 statement: empty_statement .

    $default  reduce using rule 6 (statement)


State 14

    7 statement: declaration .

    $default  reduce using rule 7 (statement)


State 15

    8 statement: declaration_assignment .

    $default  reduce using rule 8 (statement)


State 16

    9 statement: assignment .

    $default  reduce using rule 9 (statement)


State 17

   10 statement: conditional_statement .

    $default  reduce using rule 10 (statement)


State 18

   11 statement: loop_statement_for .

    $default  reduce using rule 11 (statement)


State 19

   12 statement: loop_statement_while .

    $default  reduce using rule 12 (statement)


State 20

    2 compound_statement: LBRACE statement_list . RBRACE
    4 statement_list: statement_list . statement

    LBRACE      shift, and go to state 1
    RBRACE      shift, and go to state 29
    SEMICOLON   shift, and go to state 2
    DT_INT      shift, and go to state 3
    DT_BOOL     shift, and go to state 4
    KW_IF       shift, and go to state 5
    KW_FOR      shift, and go to state 6
    KW_WHILE    shift, and go to state 7
    IDENTIFIER  shift, and go to state 8

    compound_statement      go to state 10
    statement               go to state 28
    empty_statement         go to state 13
    declaration             go to state 14
    declaration_assignment  go to state 15
    assignment              go to state 16
    conditional_statement   go to state 17
    loop_statement_for      go to state 18
    loop_statement_while    go to state 19


State 21

   14 declaration: DT_INT IDENTIFIER . SEMICOLON
   16 declaration_assignment: DT_INT IDENTIFIER . OPR_ASSIGNMENT arithmetic_expression SEMICOLON

    OPR_ASSIGNMENT  shift, and go to state 30
    SEMICOLON       shift, and go to state 31


State 22

   15 declaration: DT_BOOL IDENTIFIER . SEMICOLON
   17 declaration_assignment: DT_BOOL IDENTIFIER . OPR_ASSIGNMENT bool_expressions SEMICOLON

    OPR_ASSIGNMENT  shift, and go to state 32
    SEMICOLON       shift, and go to state 33


State 23

   48 conditional_statement: KW_IF COLON . bool_expressions compound_statement conditional_statement_else_if conditional_statement_else

    LPAREN       shift, and go to state 34
    OPR_SUB      shift, and go to state 35
    OPR_BW_NOT   shift, and go to state 36
    OPR_LGL_NOT  shift, and go to state 37
    CONST_INT    shift, and go to state 38
    CONST_BOOL   shift, and go to state 39
    IDENTIFIER   shift, and go to state 40

    bool_expressions       go to state 41
    arithmetic_expression  go to state 42
    boolean_expression     go to state 43
    relational_expression  go to state 44
    logical_expression     go to state 45


State 24

   53 loop_statement_for: KW_FOR COLON . IDENTIFIER KW_IN CONST_INT COLON CONST_INT compound_statement

    IDENTIFIER  shift, and go to state 46


State 25

   54 loop_statement_while: KW_WHILE COLON . bool_expressions compound_statement

    LPAREN       shift, and go to state 34
    OPR_SUB      shift, and go to state 35
    OPR_BW_NOT   shift, and go to state 36
    OPR_LGL_NOT  shift, and go to state 37
    CONST_INT    shift, and go to state 38
    CONST_BOOL   shift, and go to state 39
    IDENTIFIER   shift, and go to state 40

    bool_expressions       go to state 47
    arithmetic_expression  go to state 42
    boolean_expression     go to state 43
    relational_expression  go to state 44
    logical_expression     go to state 45


State 26

   18 assignment: IDENTIFIER OPR_ASSIGNMENT . arithmetic_expression SEMICOLON
   19           | IDENTIFIER OPR_ASSIGNMENT . bool_expressions SEMICOLON

    LPAREN       shift, and go to state 34
    OPR_SUB      shift, and go to state 35
    OPR_BW_NOT   shift, and go to state 36
    OPR_LGL_NOT  shift, and go to state 37
    CONST_INT    shift, and go to state 38
    CONST_BOOL   shift, and go to state 39
    IDENTIFIER   shift, and go to state 40

    bool_expressions       go to state 48
    arithmetic_expression  go to state 49
    boolean_expression     go to state 43
    relational_expression  go to state 44
    logical_expression     go to state 45


State 27

    0 $accept: translational_unit $end .

    $default  accept


State 28

    4 statement_list: statement_list statement .

    $default  reduce using rule 4 (statement_list)


State 29

    2 compound_statement: LBRACE statement_list RBRACE .

    $default  reduce using rule 2 (compound_statement)


State 30

   16 declaration_assignment: DT_INT IDENTIFIER OPR_ASSIGNMENT . arithmetic_expression SEMICOLON

    LPAREN      shift, and go to state 50
    OPR_SUB     shift, and go to state 35
    CONST_INT   shift, and go to state 38
    IDENTIFIER  shift, and go to state 51

    arithmetic_expression  go to state 52


State 31

   14 declaration: DT_INT IDENTIFIER SEMICOLON .

    $default  reduce using rule 14 (declaration)


State 32

   17 declaration_assignment: DT_BOOL IDENTIFIER OPR_ASSIGNMENT . bool_expressions SEMICOLON

    LPAREN       shift, and go to state 34
    OPR_SUB      shift, and go to state 35
    OPR_BW_NOT   shift, and go to state 36
    OPR_LGL_NOT  shift, and go to state 37
    CONST_INT    shift, and go to state 38
    CONST_BOOL   shift, and go to state 39
    IDENTIFIER   shift, and go to state 40

    bool_expressions       go to state 53
    arithmetic_expression  go to state 42
    boolean_expression     go to state 43
    relational_expression  go to state 44
    logical_expression     go to state 45


State 33

   15 declaration: DT_BOOL IDENTIFIER SEMICOLON .

    $default  reduce using rule 15 (declaration)


State 34

   30 arithmetic_expression: LPAREN . arithmetic_expression RPAREN
   36 boolean_expression: LPAREN . boolean_expression RPAREN
   43 relational_expression: LPAREN . relational_expression RPAREN
   47 logical_expression: LPAREN . logical_expression RPAREN

    LPAREN       shift, and go to state 34
    OPR_SUB      shift, and go to state 35
    OPR_BW_NOT   shift, and go to state 36
    OPR_LGL_NOT  shift, and go to state 37
    CONST_INT    shift, and go to state 38
    CONST_BOOL   shift, and go to state 39
    IDENTIFIER   shift, and go to state 40

    bool_expressions       go to state 54
    arithmetic_expression  go to state 55
    boolean_expression     go to state 56
    relational_expression  go to state 57
    logical_expression     go to state 58


State 35

   29 arithmetic_expression: OPR_SUB . arithmetic_expression

    LPAREN      shift, and go to state 50
    OPR_SUB     shift, and go to state 35
    CONST_INT   shift, and go to state 38
    IDENTIFIER  shift, and go to state 51

    arithmetic_expression  go to state 59


State 36

   33 boolean_expression: OPR_BW_NOT . boolean_expression

    LPAREN      shift, and go to state 60
    OPR_BW_NOT  shift, and go to state 36
    CONST_BOOL  shift, and go to state 39
    IDENTIFIER  shift, and go to state 61

    boolean_expression  go to state 62


State 37

   44 logical_expression: OPR_LGL_NOT . bool_expressions

    LPAREN       shift, and go to state 34
    OPR_SUB      shift, and go to state 35
    OPR_BW_NOT   shift, and go to state 36
    OPR_LGL_NOT  shift, and go to state 37
    CONST_INT    shift, and go to state 38
    CONST_BOOL   shift, and go to state 39
    IDENTIFIER   shift, and go to state 40

    bool_expressions       go to state 63
    arithmetic_expression  go to state 42
    boolean_expression     go to state 43
    relational_expression  go to state 44
    logical_expression     go to state 45


State 38

   23 arithmetic_expression: CONST_INT .

    $default  reduce using rule 23 (arithmetic_expression)


State 39

   31 boolean_expression: CONST_BOOL .

    $default  reduce using rule 31 (boolean_expression)


State 40

   24 arithmetic_expression: IDENTIFIER .
   32 boolean_expression: IDENTIFIER .

    LBRACE       reduce using rule 32 (boolean_expression)
    RPAREN       reduce using rule 24 (arithmetic_expression)
    RPAREN       [reduce using rule 32 (boolean_expression)]
    OPR_BW_AND   reduce using rule 32 (boolean_expression)
    OPR_BW_OR    reduce using rule 32 (boolean_expression)
    OPR_LGL_AND  reduce using rule 32 (boolean_expression)
    OPR_LGL_OR   reduce using rule 32 (boolean_expression)
    SEMICOLON    reduce using rule 24 (arithmetic_expression)
    SEMICOLON    [reduce using rule 32 (boolean_expression)]
    $default     reduce using rule 24 (arithmetic_expression)


State 41

   45 logical_expression: bool_expressions . OPR_LGL_AND bool_expressions
   46                   | bool_expressions . OPR_LGL_OR bool_expressions
   48 conditional_statement: KW_IF COLON bool_expressions . compound_statement conditional_statement_else_if conditional_statement_else

    LBRACE       shift, and go to state 1
    OPR_LGL_AND  shift, and go to state 64
    OPR_LGL_OR   shift, and go to state 65

    compound_statement  go to state 66


State 42

   25 arithmetic_expression: arithmetic_expression . OPR_ADD arithmetic_expression
   26                      | arithmetic_expression . OPR_SUB arithmetic_expression
   27                      | arithmetic_expression . OPR_MUL arithmetic_expression
   28                      | arithmetic_expression . OPR_DIV arithmetic_expression
   37 relational_expression: arithmetic_expression . OPR_GT arithmetic_expression
   38                      | arithmetic_expression . OPR_LT arithmetic_expression
   39                      | arithmetic_expression . OPR_EQ arithmetic_expression
   40                      | arithmetic_expression . OPR_NE arithmetic_expression
   41                      | arithmetic_expression . OPR_GE arithmetic_expression
   42                      | arithmetic_expression . OPR_LE arithmetic_expression

    OPR_ADD  shift, and go to state 67
    OPR_SUB  shift, and go to state 68
    OPR_MUL  shift, and go to state 69
    OPR_DIV  shift, and go to state 70
    OPR_GT   shift, and go to state 71
    OPR_LT   shift, and go to state 72
    OPR_EQ   shift, and go to state 73
    OPR_NE   shift, and go to state 74
    OPR_GE   shift, and go to state 75
    OPR_LE   shift, and go to state 76


State 43

   20 bool_expressions: boolean_expression .
   34 boolean_expression: boolean_expression . OPR_BW_AND boolean_expression
   35                   | boolean_expression . OPR_BW_OR boolean_expression

    OPR_BW_AND  shift, and go to state 77
    OPR_BW_OR   shift, and go to state 78

    $default  reduce using rule 20 (bool_expressions)


State 44

   21 bool_expressions: relational_expression .

    $default  reduce using rule 21 (bool_expressions)


State 45

   22 bool_expressions: logical_expression .

    $default  reduce using rule 22 (bool_expressions)


State 46

   53 loop_statement_for: KW_FOR COLON IDENTIFIER . KW_IN CONST_INT COLON CONST_INT compound_statement

    KW_IN  shift, and go to state 79


State 47

   45 logical_expression: bool_expressions . OPR_LGL_AND bool_expressions
   46                   | bool_expressions . OPR_LGL_OR bool_expressions
   54 loop_statement_while: KW_WHILE COLON bool_expressions . compound_statement

    LBRACE       shift, and go to state 1
    OPR_LGL_AND  shift, and go to state 64
    OPR_LGL_OR   shift, and go to state 65

    compound_statement  go to state 80


State 48

   19 assignment: IDENTIFIER OPR_ASSIGNMENT bool_expressions . SEMICOLON
   45 logical_expression: bool_expressions . OPR_LGL_AND bool_expressions
   46                   | bool_expressions . OPR_LGL_OR bool_expressions

    OPR_LGL_AND  shift, and go to state 64
    OPR_LGL_OR   shift, and go to state 65
    SEMICOLON    shift, and go to state 81


State 49

   18 assignment: IDENTIFIER OPR_ASSIGNMENT arithmetic_expression . SEMICOLON
   25 arithmetic_expression: arithmetic_expression . OPR_ADD arithmetic_expression
   26                      | arithmetic_expression . OPR_SUB arithmetic_expression
   27                      | arithmetic_expression . OPR_MUL arithmetic_expression
   28                      | arithmetic_expression . OPR_DIV arithmetic_expression
   37 relational_expression: arithmetic_expression . OPR_GT arithmetic_expression
   38                      | arithmetic_expression . OPR_LT arithmetic_expression
   39                      | arithmetic_expression . OPR_EQ arithmetic_expression
   40                      | arithmetic_expression . OPR_NE arithmetic_expression
   41                      | arithmetic_expression . OPR_GE arithmetic_expression
   42                      | arithmetic_expression . OPR_LE arithmetic_expression

    OPR_ADD    shift, and go to state 67
    OPR_SUB    shift, and go to state 68
    OPR_MUL    shift, and go to state 69
    OPR_DIV    shift, and go to state 70
    OPR_GT     shift, and go to state 71
    OPR_LT     shift, and go to state 72
    OPR_EQ     shift, and go to state 73
    OPR_NE     shift, and go to state 74
    OPR_GE     shift, and go to state 75
    OPR_LE     shift, and go to state 76
    SEMICOLON  shift, and go to state 82


State 50

   30 arithmetic_expression: LPAREN . arithmetic_expression RPAREN

    LPAREN      shift, and go to state 50
    OPR_SUB     shift, and go to state 35
    CONST_INT   shift, and go to state 38
    IDENTIFIER  shift, and go to state 51

    arithmetic_expression  go to state 83


State 51

   24 arithmetic_expression: IDENTIFIER .

    $default  reduce using rule 24 (arithmetic_expression)


State 52

   16 declaration_assignment: DT_INT IDENTIFIER OPR_ASSIGNMENT arithmetic_expression . SEMICOLON
   25 arithmetic_expression: arithmetic_expression . OPR_ADD arithmetic_expression
   26                      | arithmetic_expression . OPR_SUB arithmetic_expression
   27                      | arithmetic_expression . OPR_MUL arithmetic_expression
   28                      | arithmetic_expression . OPR_DIV arithmetic_expression

    OPR_ADD    shift, and go to state 67
    OPR_SUB    shift, and go to state 68
    OPR_MUL    shift, and go to state 69
    OPR_DIV    shift, and go to state 70
    SEMICOLON  shift, and go to state 84


State 53

   17 declaration_assignment: DT_BOOL IDENTIFIER OPR_ASSIGNMENT bool_expressions . SEMICOLON
   45 logical_expression: bool_expressions . OPR_LGL_AND bool_expressions
   46                   | bool_expressions . OPR_LGL_OR bool_expressions

    OPR_LGL_AND  shift, and go to state 64
    OPR_LGL_OR   shift, and go to state 65
    SEMICOLON    shift, and go to state 85


State 54

   45 logical_expression: bool_expressions . OPR_LGL_AND bool_expressions
   46                   | bool_expressions . OPR_LGL_OR bool_expressions

    OPR_LGL_AND  shift, and go to state 64
    OPR_LGL_OR   shift, and go to state 65


State 55

   25 arithmetic_expression: arithmetic_expression . OPR_ADD arithmetic_expression
   26                      | arithmetic_expression . OPR_SUB arithmetic_expression
   27                      | arithmetic_expression . OPR_MUL arithmetic_expression
   28                      | arithmetic_expression . OPR_DIV arithmetic_expression
   30                      | LPAREN arithmetic_expression . RPAREN
   37 relational_expression: arithmetic_expression . OPR_GT arithmetic_expression
   38                      | arithmetic_expression . OPR_LT arithmetic_expression
   39                      | arithmetic_expression . OPR_EQ arithmetic_expression
   40                      | arithmetic_expression . OPR_NE arithmetic_expression
   41                      | arithmetic_expression . OPR_GE arithmetic_expression
   42                      | arithmetic_expression . OPR_LE arithmetic_expression

    RPAREN   shift, and go to state 86
    OPR_ADD  shift, and go to state 67
    OPR_SUB  shift, and go to state 68
    OPR_MUL  shift, and go to state 69
    OPR_DIV  shift, and go to state 70
    OPR_GT   shift, and go to state 71
    OPR_LT   shift, and go to state 72
    OPR_EQ   shift, and go to state 73
    OPR_NE   shift, and go to state 74
    OPR_GE   shift, and go to state 75
    OPR_LE   shift, and go to state 76


State 56

   20 bool_expressions: boolean_expression .
   34 boolean_expression: boolean_expression . OPR_BW_AND boolean_expression
   35                   | boolean_expression . OPR_BW_OR boolean_expression
   36                   | LPAREN boolean_expression . RPAREN

    RPAREN      shift, and go to state 87
    OPR_BW_AND  shift, and go to state 77
    OPR_BW_OR   shift, and go to state 78

    $default  reduce using rule 20 (bool_expressions)


State 57

   21 bool_expressions: relational_expression .
   43 relational_expression: LPAREN relational_expression . RPAREN

    RPAREN  shift, and go to state 88

    $default  reduce using rule 21 (bool_expressions)


State 58

   22 bool_expressions: logical_expression .
   47 logical_expression: LPAREN logical_expression . RPAREN

    RPAREN  shift, and go to state 89

    $default  reduce using rule 22 (bool_expressions)


State 59

   25 arithmetic_expression: arithmetic_expression . OPR_ADD arithmetic_expression
   26                      | arithmetic_expression . OPR_SUB arithmetic_expression
   27                      | arithmetic_expression . OPR_MUL arithmetic_expression
   28                      | arithmetic_expression . OPR_DIV arithmetic_expression
   29                      | OPR_SUB arithmetic_expression .

    $default  reduce using rule 29 (arithmetic_expression)


State 60

   36 boolean_expression: LPAREN . boolean_expression RPAREN

    LPAREN      shift, and go to state 60
    OPR_BW_NOT  shift, and go to state 36
    CONST_BOOL  shift, and go to state 39
    IDENTIFIER  shift, and go to state 61

    boolean_expression  go to state 90


State 61

   32 boolean_expression: IDENTIFIER .

    $default  reduce using rule 32 (boolean_expression)


State 62

   33 boolean_expression: OPR_BW_NOT boolean_expression .
   34                   | boolean_expression . OPR_BW_AND boolean_expression
   35                   | boolean_expression . OPR_BW_OR boolean_expression

    $default  reduce using rule 33 (boolean_expression)


State 63

   44 logical_expression: OPR_LGL_NOT bool_expressions .
   45                   | bool_expressions . OPR_LGL_AND bool_expressions
   46                   | bool_expressions . OPR_LGL_OR bool_expressions

    $default  reduce using rule 44 (logical_expression)


State 64

   45 logical_expression: bool_expressions OPR_LGL_AND . bool_expressions

    LPAREN       shift, and go to state 34
    OPR_SUB      shift, and go to state 35
    OPR_BW_NOT   shift, and go to state 36
    OPR_LGL_NOT  shift, and go to state 37
    CONST_INT    shift, and go to state 38
    CONST_BOOL   shift, and go to state 39
    IDENTIFIER   shift, and go to state 40

    bool_expressions       go to state 91
    arithmetic_expression  go to state 42
    boolean_expression     go to state 43
    relational_expression  go to state 44
    logical_expression     go to state 45


State 65

   46 logical_expression: bool_expressions OPR_LGL_OR . bool_expressions

    LPAREN       shift, and go to state 34
    OPR_SUB      shift, and go to state 35
    OPR_BW_NOT   shift, and go to state 36
    OPR_LGL_NOT  shift, and go to state 37
    CONST_INT    shift, and go to state 38
    CONST_BOOL   shift, and go to state 39
    IDENTIFIER   shift, and go to state 40

    bool_expressions       go to state 92
    arithmetic_expression  go to state 42
    boolean_expression     go to state 43
    relational_expression  go to state 44
    logical_expression     go to state 45


State 66

   48 conditional_statement: KW_IF COLON bool_expressions compound_statement . conditional_statement_else_if conditional_statement_else

    $default  reduce using rule 50 (conditional_statement_else_if)

    conditional_statement_else_if  go to state 93


State 67

   25 arithmetic_expression: arithmetic_expression OPR_ADD . arithmetic_expression

    LPAREN      shift, and go to state 50
    OPR_SUB     shift, and go to state 35
    CONST_INT   shift, and go to state 38
    IDENTIFIER  shift, and go to state 51

    arithmetic_expression  go to state 94


State 68

   26 arithmetic_expression: arithmetic_expression OPR_SUB . arithmetic_expression

    LPAREN      shift, and go to state 50
    OPR_SUB     shift, and go to state 35
    CONST_INT   shift, and go to state 38
    IDENTIFIER  shift, and go to state 51

    arithmetic_expression  go to state 95


State 69

   27 arithmetic_expression: arithmetic_expression OPR_MUL . arithmetic_expression

    LPAREN      shift, and go to state 50
    OPR_SUB     shift, and go to state 35
    CONST_INT   shift, and go to state 38
    IDENTIFIER  shift, and go to state 51

    arithmetic_expression  go to state 96


State 70

   28 arithmetic_expression: arithmetic_expression OPR_DIV . arithmetic_expression

    LPAREN      shift, and go to state 50
    OPR_SUB     shift, and go to state 35
    CONST_INT   shift, and go to state 38
    IDENTIFIER  shift, and go to state 51

    arithmetic_expression  go to state 97


State 71

   37 relational_expression: arithmetic_expression OPR_GT . arithmetic_expression

    LPAREN      shift, and go to state 50
    OPR_SUB     shift, and go to state 35
    CONST_INT   shift, and go to state 38
    IDENTIFIER  shift, and go to state 51

    arithmetic_expression  go to state 98


State 72

   38 relational_expression: arithmetic_expression OPR_LT . arithmetic_expression

    LPAREN      shift, and go to state 50
    OPR_SUB     shift, and go to state 35
    CONST_INT   shift, and go to state 38
    IDENTIFIER  shift, and go to state 51

    arithmetic_expression  go to state 99


State 73

   39 relational_expression: arithmetic_expression OPR_EQ . arithmetic_expression

    LPAREN      shift, and go to state 50
    OPR_SUB     shift, and go to state 35
    CONST_INT   shift, and go to state 38
    IDENTIFIER  shift, and go to state 51

    arithmetic_expression  go to state 100


State 74

   40 relational_expression: arithmetic_expression OPR_NE . arithmetic_expression

    LPAREN      shift, and go to state 50
    OPR_SUB     shift, and go to state 35
    CONST_INT   shift, and go to state 38
    IDENTIFIER  shift, and go to state 51

    arithmetic_expression  go to state 101


State 75

   41 relational_expression: arithmetic_expression OPR_GE . arithmetic_expression

    LPAREN      shift, and go to state 50
    OPR_SUB     shift, and go to state 35
    CONST_INT   shift, and go to state 38
    IDENTIFIER  shift, and go to state 51

    arithmetic_expression  go to state 102


State 76

   42 relational_expression: arithmetic_expression OPR_LE . arithmetic_expression

    LPAREN      shift, and go to state 50
    OPR_SUB     shift, and go to state 35
    CONST_INT   shift, and go to state 38
    IDENTIFIER  shift, and go to state 51

    arithmetic_expression  go to state 103


State 77

   34 boolean_expression: boolean_expression OPR_BW_AND . boolean_expression

    LPAREN      shift, and go to state 60
    OPR_BW_NOT  shift, and go to state 36
    CONST_BOOL  shift, and go to state 39
    IDENTIFIER  shift, and go to state 61

    boolean_expression  go to state 104


State 78

   35 boolean_expression: boolean_expression OPR_BW_OR . boolean_expression

    LPAREN      shift, and go to state 60
    OPR_BW_NOT  shift, and go to state 36
    CONST_BOOL  shift, and go to state 39
    IDENTIFIER  shift, and go to state 61

    boolean_expression  go to state 105


State 79

   53 loop_statement_for: KW_FOR COLON IDENTIFIER KW_IN . CONST_INT COLON CONST_INT compound_statement

    CONST_INT  shift, and go to state 106


State 80

   54 loop_statement_while: KW_WHILE COLON bool_expressions compound_statement .

    $default  reduce using rule 54 (loop_statement_while)


State 81

   19 assignment: IDENTIFIER OPR_ASSIGNMENT bool_expressions SEMICOLON .

    $default  reduce using rule 19 (assignment)


State 82

   18 assignment: IDENTIFIER OPR_ASSIGNMENT arithmetic_expression SEMICOLON .

    $default  reduce using rule 18 (assignment)


State 83

   25 arithmetic_expression: arithmetic_expression . OPR_ADD arithmetic_expression
   26                      | arithmetic_expression . OPR_SUB arithmetic_expression
   27                      | arithmetic_expression . OPR_MUL arithmetic_expression
   28                      | arithmetic_expression . OPR_DIV arithmetic_expression
   30                      | LPAREN arithmetic_expression . RPAREN

    RPAREN   shift, and go to state 86
    OPR_ADD  shift, and go to state 67
    OPR_SUB  shift, and go to state 68
    OPR_MUL  shift, and go to state 69
    OPR_DIV  shift, and go to state 70


State 84

   16 declaration_assignment: DT_INT IDENTIFIER OPR_ASSIGNMENT arithmetic_expression SEMICOLON .

    $default  reduce using rule 16 (declaration_assignment)


State 85

   17 declaration_assignment: DT_BOOL IDENTIFIER OPR_ASSIGNMENT bool_expressions SEMICOLON .

    $default  reduce using rule 17 (declaration_assignment)


State 86

   30 arithmetic_expression: LPAREN arithmetic_expression RPAREN .

    $default  reduce using rule 30 (arithmetic_expression)


State 87

   36 boolean_expression: LPAREN boolean_expression RPAREN .

    $default  reduce using rule 36 (boolean_expression)


State 88

   43 relational_expression: LPAREN relational_expression RPAREN .

    $default  reduce using rule 43 (relational_expression)


State 89

   47 logical_expression: LPAREN logical_expression RPAREN .

    $default  reduce using rule 47 (logical_expression)


State 90

   34 boolean_expression: boolean_expression . OPR_BW_AND boolean_expression
   35                   | boolean_expression . OPR_BW_OR boolean_expression
   36                   | LPAREN boolean_expression . RPAREN

    RPAREN      shift, and go to state 87
    OPR_BW_AND  shift, and go to state 77
    OPR_BW_OR   shift, and go to state 78


State 91

   45 logical_expression: bool_expressions . OPR_LGL_AND bool_expressions
   45                   | bool_expressions OPR_LGL_AND bool_expressions .
   46                   | bool_expressions . OPR_LGL_OR bool_expressions

    $default  reduce using rule 45 (logical_expression)


State 92

   45 logical_expression: bool_expressions . OPR_LGL_AND bool_expressions
   46                   | bool_expressions . OPR_LGL_OR bool_expressions
   46                   | bool_expressions OPR_LGL_OR bool_expressions .

    $default  reduce using rule 46 (logical_expression)


State 93

   48 conditional_statement: KW_IF COLON bool_expressions compound_statement conditional_statement_else_if . conditional_statement_else
   49 conditional_statement_else_if: conditional_statement_else_if . KW_ELIF COLON bool_expressions compound_statement

    KW_ELIF  shift, and go to state 107
    KW_ELSE  shift, and go to state 108

    $default  reduce using rule 52 (conditional_statement_else)

    conditional_statement_else  go to state 109


State 94

   25 arithmetic_expression: arithmetic_expression . OPR_ADD arithmetic_expression
   25                      | arithmetic_expression OPR_ADD arithmetic_expression .
   26                      | arithmetic_expression . OPR_SUB arithmetic_expression
   27                      | arithmetic_expression . OPR_MUL arithmetic_expression
   28                      | arithmetic_expression . OPR_DIV arithmetic_expression

    OPR_MUL  shift, and go to state 69
    OPR_DIV  shift, and go to state 70

    $default  reduce using rule 25 (arithmetic_expression)


State 95

   25 arithmetic_expression: arithmetic_expression . OPR_ADD arithmetic_expression
   26                      | arithmetic_expression . OPR_SUB arithmetic_expression
   26                      | arithmetic_expression OPR_SUB arithmetic_expression .
   27                      | arithmetic_expression . OPR_MUL arithmetic_expression
   28                      | arithmetic_expression . OPR_DIV arithmetic_expression

    OPR_MUL  shift, and go to state 69
    OPR_DIV  shift, and go to state 70

    $default  reduce using rule 26 (arithmetic_expression)


State 96

   25 arithmetic_expression: arithmetic_expression . OPR_ADD arithmetic_expression
   26                      | arithmetic_expression . OPR_SUB arithmetic_expression
   27                      | arithmetic_expression . OPR_MUL arithmetic_expression
   27                      | arithmetic_expression OPR_MUL arithmetic_expression .
   28                      | arithmetic_expression . OPR_DIV arithmetic_expression

    $default  reduce using rule 27 (arithmetic_expression)


State 97

   25 arithmetic_expression: arithmetic_expression . OPR_ADD arithmetic_expression
   26                      | arithmetic_expression . OPR_SUB arithmetic_expression
   27                      | arithmetic_expression . OPR_MUL arithmetic_expression
   28                      | arithmetic_expression . OPR_DIV arithmetic_expression
   28                      | arithmetic_expression OPR_DIV arithmetic_expression .

    $default  reduce using rule 28 (arithmetic_expression)


State 98

   25 arithmetic_expression: arithmetic_expression . OPR_ADD arithmetic_expression
   26                      | arithmetic_expression . OPR_SUB arithmetic_expression
   27                      | arithmetic_expression . OPR_MUL arithmetic_expression
   28                      | arithmetic_expression . OPR_DIV arithmetic_expression
   37 relational_expression: arithmetic_expression OPR_GT arithmetic_expression .

    OPR_ADD  shift, and go to state 67
    OPR_SUB  shift, and go to state 68
    OPR_MUL  shift, and go to state 69
    OPR_DIV  shift, and go to state 70

    $default  reduce using rule 37 (relational_expression)


State 99

   25 arithmetic_expression: arithmetic_expression . OPR_ADD arithmetic_expression
   26                      | arithmetic_expression . OPR_SUB arithmetic_expression
   27                      | arithmetic_expression . OPR_MUL arithmetic_expression
   28                      | arithmetic_expression . OPR_DIV arithmetic_expression
   38 relational_expression: arithmetic_expression OPR_LT arithmetic_expression .

    OPR_ADD  shift, and go to state 67
    OPR_SUB  shift, and go to state 68
    OPR_MUL  shift, and go to state 69
    OPR_DIV  shift, and go to state 70

    $default  reduce using rule 38 (relational_expression)


State 100

   25 arithmetic_expression: arithmetic_expression . OPR_ADD arithmetic_expression
   26                      | arithmetic_expression . OPR_SUB arithmetic_expression
   27                      | arithmetic_expression . OPR_MUL arithmetic_expression
   28                      | arithmetic_expression . OPR_DIV arithmetic_expression
   39 relational_expression: arithmetic_expression OPR_EQ arithmetic_expression .

    OPR_ADD  shift, and go to state 67
    OPR_SUB  shift, and go to state 68
    OPR_MUL  shift, and go to state 69
    OPR_DIV  shift, and go to state 70

    $default  reduce using rule 39 (relational_expression)


State 101

   25 arithmetic_expression: arithmetic_expression . OPR_ADD arithmetic_expression
   26                      | arithmetic_expression . OPR_SUB arithmetic_expression
   27                      | arithmetic_expression . OPR_MUL arithmetic_expression
   28                      | arithmetic_expression . OPR_DIV arithmetic_expression
   40 relational_expression: arithmetic_expression OPR_NE arithmetic_expression .

    OPR_ADD  shift, and go to state 67
    OPR_SUB  shift, and go to state 68
    OPR_MUL  shift, and go to state 69
    OPR_DIV  shift, and go to state 70

    $default  reduce using rule 40 (relational_expression)


State 102

   25 arithmetic_expression: arithmetic_expression . OPR_ADD arithmetic_expression
   26                      | arithmetic_expression . OPR_SUB arithmetic_expression
   27                      | arithmetic_expression . OPR_MUL arithmetic_expression
   28                      | arithmetic_expression . OPR_DIV arithmetic_expression
   41 relational_expression: arithmetic_expression OPR_GE arithmetic_expression .

    OPR_ADD  shift, and go to state 67
    OPR_SUB  shift, and go to state 68
    OPR_MUL  shift, and go to state 69
    OPR_DIV  shift, and go to state 70

    $default  reduce using rule 41 (relational_expression)


State 103

   25 arithmetic_expression: arithmetic_expression . OPR_ADD arithmetic_expression
   26                      | arithmetic_expression . OPR_SUB arithmetic_expression
   27                      | arithmetic_expression . OPR_MUL arithmetic_expression
   28                      | arithmetic_expression . OPR_DIV arithmetic_expression
   42 relational_expression: arithmetic_expression OPR_LE arithmetic_expression .

    OPR_ADD  shift, and go to state 67
    OPR_SUB  shift, and go to state 68
    OPR_MUL  shift, and go to state 69
    OPR_DIV  shift, and go to state 70

    $default  reduce using rule 42 (relational_expression)


State 104

   34 boolean_expression: boolean_expression . OPR_BW_AND boolean_expression
   34                   | boolean_expression OPR_BW_AND boolean_expression .
   35                   | boolean_expression . OPR_BW_OR boolean_expression

    $default  reduce using rule 34 (boolean_expression)


State 105

   34 boolean_expression: boolean_expression . OPR_BW_AND boolean_expression
   35                   | boolean_expression . OPR_BW_OR boolean_expression
   35                   | boolean_expression OPR_BW_OR boolean_expression .

    $default  reduce using rule 35 (boolean_expression)


State 106

   53 loop_statement_for: KW_FOR COLON IDENTIFIER KW_IN CONST_INT . COLON CONST_INT compound_statement

    COLON  shift, and go to state 110


State 107

   49 conditional_statement_else_if: conditional_statement_else_if KW_ELIF . COLON bool_expressions compound_statement

    COLON  shift, and go to state 111


State 108

   51 conditional_statement_else: KW_ELSE . compound_statement

    LBRACE  shift, and go to state 1

    compound_statement  go to state 112


State 109

   48 conditional_statement: KW_IF COLON bool_expressions compound_statement conditional_statement_else_if conditional_statement_else .

    $default  reduce using rule 48 (conditional_statement)


State 110

   53 loop_statement_for: KW_FOR COLON IDENTIFIER KW_IN CONST_INT COLON . CONST_INT compound_statement

    CONST_INT  shift, and go to state 113


State 111

   49 conditional_statement_else_if: conditional_statement_else_if KW_ELIF COLON . bool_expressions compound_statement

    LPAREN       shift, and go to state 34
    OPR_SUB      shift, and go to state 35
    OPR_BW_NOT   shift, and go to state 36
    OPR_LGL_NOT  shift, and go to state 37
    CONST_INT    shift, and go to state 38
    CONST_BOOL   shift, and go to state 39
    IDENTIFIER   shift, and go to state 40

    bool_expressions       go to state 114
    arithmetic_expression  go to state 42
    boolean_expression     go to state 43
    relational_expression  go to state 44
    logical_expression     go to state 45


State 112

   51 conditional_statement_else: KW_ELSE compound_statement .

    $default  reduce using rule 51 (conditional_statement_else)


State 113

   53 loop_statement_for: KW_FOR COLON IDENTIFIER KW_IN CONST_INT COLON CONST_INT . compound_statement

    LBRACE  shift, and go to state 1

    compound_statement  go to state 115


State 114

   45 logical_expression: bool_expressions . OPR_LGL_AND bool_expressions
   46                   | bool_expressions . OPR_LGL_OR bool_expressions
   49 conditional_statement_else_if: conditional_statement_else_if KW_ELIF COLON bool_expressions . compound_statement

    LBRACE       shift, and go to state 1
    OPR_LGL_AND  shift, and go to state 64
    OPR_LGL_OR   shift, and go to state 65

    compound_statement  go to state 116


State 115

   53 loop_statement_for: KW_FOR COLON IDENTIFIER KW_IN CONST_INT COLON CONST_INT compound_statement .

    $default  reduce using rule 53 (loop_statement_for)


State 116

   49 conditional_statement_else_if: conditional_statement_else_if KW_ELIF COLON bool_expressions compound_statement .

    $default  reduce using rule 49 (conditional_statement_else_if)
