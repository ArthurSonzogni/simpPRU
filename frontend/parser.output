Terminals unused in grammar

   VOID_IDENTIFIER


State 48 conflicts: 2 reduce/reduce


Grammar

    0 $accept: translation_unit $end

    1 translation_unit: program
    2                 | translation_unit program

    3 program: statement
    4        | function_definition

    5 compound_statement: LBRACE statement_list RBRACE

    6 statement_list: statement
    7               | statement_list statement

    8 statement: compound_statement
    9          | empty_statement
   10          | declaration
   11          | declaration_assignment
   12          | assignment
   13          | conditional_statement
   14          | loop_statement_for
   15          | loop_statement_while
   16          | return_statement
   17          | function_call SEMICOLON

   18 empty_statement: SEMICOLON

   19 declaration: DT_INT IDENTIFIER SEMICOLON
   20            | DT_BOOL IDENTIFIER SEMICOLON

   21 declaration_assignment: DT_INT IDENTIFIER OPR_ASSIGNMENT arithmetic_expression SEMICOLON
   22                       | DT_BOOL IDENTIFIER OPR_ASSIGNMENT bool_expressions SEMICOLON

   23 assignment: INT_IDENTIFIER OPR_ASSIGNMENT arithmetic_expression SEMICOLON
   24           | BOOL_IDENTIFIER OPR_ASSIGNMENT bool_expressions SEMICOLON

   25 bool_expressions: boolean_expression
   26                 | relational_expression
   27                 | logical_expression

   28 arithmetic_expression: CONST_INT
   29                      | INT_IDENTIFIER
   30                      | function_call
   31                      | arithmetic_expression OPR_ADD arithmetic_expression
   32                      | arithmetic_expression OPR_SUB arithmetic_expression
   33                      | arithmetic_expression OPR_MUL arithmetic_expression
   34                      | arithmetic_expression OPR_DIV arithmetic_expression
   35                      | OPR_SUB arithmetic_expression
   36                      | LPAREN arithmetic_expression RPAREN

   37 boolean_expression: CONST_BOOL
   38                   | BOOL_IDENTIFIER
   39                   | function_call
   40                   | OPR_BW_NOT boolean_expression
   41                   | boolean_expression OPR_BW_AND boolean_expression
   42                   | boolean_expression OPR_BW_OR boolean_expression
   43                   | LPAREN boolean_expression RPAREN

   44 relational_expression: arithmetic_expression OPR_GT arithmetic_expression
   45                      | arithmetic_expression OPR_LT arithmetic_expression
   46                      | arithmetic_expression OPR_EQ arithmetic_expression
   47                      | arithmetic_expression OPR_NE arithmetic_expression
   48                      | arithmetic_expression OPR_GE arithmetic_expression
   49                      | arithmetic_expression OPR_LE arithmetic_expression
   50                      | LPAREN relational_expression RPAREN

   51 logical_expression: OPR_LGL_NOT bool_expressions
   52                   | bool_expressions OPR_LGL_AND bool_expressions
   53                   | bool_expressions OPR_LGL_OR bool_expressions
   54                   | LPAREN logical_expression RPAREN

   55 conditional_statement: KW_IF COLON bool_expressions compound_statement conditional_statement_else_if conditional_statement_else

   56 conditional_statement_else_if: conditional_statement_else_if KW_ELIF COLON bool_expressions compound_statement
   57                              | %empty

   58 conditional_statement_else: KW_ELSE compound_statement
   59                           | %empty

   60 loop_statement_for: KW_FOR COLON IDENTIFIER KW_IN CONST_INT COLON CONST_INT compound_statement

   61 loop_statement_while: KW_WHILE COLON bool_expressions compound_statement

   62 $@1: %empty

   63 function_definition: KW_DEF IDENTIFIER COLON DT_INT $@1 COLON parameters compound_statement

   64 $@2: %empty

   65 function_definition: KW_DEF IDENTIFIER COLON DT_BOOL $@2 COLON parameters compound_statement

   66 $@3: %empty

   67 function_definition: KW_DEF IDENTIFIER COLON DT_VOID $@3 COLON parameters compound_statement

   68 parameters: parameter_list_def
   69           | %empty

   70 parameter_list_def: parameter_list_def COMMA parameter
   71                   | parameter

   72 parameter: DT_INT IDENTIFIER
   73          | DT_BOOL IDENTIFIER

   74 return_statement: KW_RETURN bool_expressions SEMICOLON
   75                 | KW_RETURN arithmetic_expression SEMICOLON
   76                 | KW_RETURN SEMICOLON

   77 function_call: IDENTIFIER LPAREN function_call_parameters RPAREN
   78              | INT_IDENTIFIER LPAREN function_call_parameters RPAREN
   79              | BOOL_IDENTIFIER LPAREN function_call_parameters RPAREN

   80 function_call_parameters: function_call_parameters COMMA function_call_datatypes
   81                         | function_call_datatypes
   82                         | %empty

   83 function_call_datatypes: IDENTIFIER
   84                        | INT_IDENTIFIER
   85                        | BOOL_IDENTIFIER
   86                        | CONST_INT
   87                        | CONST_BOOL


Terminals, with rules where they appear

$end (0) 0
error (256)
LBRACE (258) 5
RBRACE (259) 5
LPAREN (260) 36 43 50 54 77 78 79
RPAREN (261) 36 43 50 54 77 78 79
OPR_ADD (262) 31
OPR_SUB (263) 32 35
OPR_MUL (264) 33
OPR_DIV (265) 34
NEG (266)
OPR_GT (267) 44
OPR_LT (268) 45
OPR_EQ (269) 46
OPR_NE (270) 47
OPR_GE (271) 48
OPR_LE (272) 49
OPR_BW_NOT (273) 40
OPR_BW_AND (274) 41
OPR_BW_OR (275) 42
OPR_LGL_NOT (276) 51
OPR_LGL_AND (277) 52
OPR_LGL_OR (278) 53
OPR_ASSIGNMENT (279) 21 22 23 24
SEMICOLON (280) 17 18 19 20 21 22 23 24 74 75 76
COLON (281) 55 56 60 61 63 65 67
COMMA (282) 70 80
DT_INT (283) 19 21 63 72
DT_BOOL (284) 20 22 65 73
DT_VOID (285) 67
KW_IF (286) 55
KW_ELIF (287) 56
KW_ELSE (288) 58
KW_FOR (289) 60
KW_IN (290) 60
KW_WHILE (291) 61
KW_RETURN (292) 74 75 76
KW_DEF (293) 63 65 67
CONST_INT (294) 28 60 86
CONST_BOOL (295) 37 87
IDENTIFIER (296) 19 20 21 22 60 63 65 67 72 73 77 83
INT_IDENTIFIER (297) 23 29 78 84
BOOL_IDENTIFIER (298) 24 38 79 85
VOID_IDENTIFIER (299)


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
translation_unit (46)
    on left: 1 2, on right: 0 2
program (47)
    on left: 3 4, on right: 1 2
compound_statement (48)
    on left: 5, on right: 8 55 56 58 60 61 63 65 67
statement_list (49)
    on left: 6 7, on right: 5 7
statement (50)
    on left: 8 9 10 11 12 13 14 15 16 17, on right: 3 6 7
empty_statement (51)
    on left: 18, on right: 9
declaration (52)
    on left: 19 20, on right: 10
declaration_assignment (53)
    on left: 21 22, on right: 11
assignment (54)
    on left: 23 24, on right: 12
bool_expressions (55)
    on left: 25 26 27, on right: 22 24 51 52 53 55 56 61 74
arithmetic_expression (56)
    on left: 28 29 30 31 32 33 34 35 36, on right: 21 23 31 32 33 34
    35 36 44 45 46 47 48 49 75
boolean_expression (57)
    on left: 37 38 39 40 41 42 43, on right: 25 40 41 42 43
relational_expression (58)
    on left: 44 45 46 47 48 49 50, on right: 26 50
logical_expression (59)
    on left: 51 52 53 54, on right: 27 54
conditional_statement (60)
    on left: 55, on right: 13
conditional_statement_else_if (61)
    on left: 56 57, on right: 55 56
conditional_statement_else (62)
    on left: 58 59, on right: 55
loop_statement_for (63)
    on left: 60, on right: 14
loop_statement_while (64)
    on left: 61, on right: 15
function_definition (65)
    on left: 63 65 67, on right: 4
$@1 (66)
    on left: 62, on right: 63
$@2 (67)
    on left: 64, on right: 65
$@3 (68)
    on left: 66, on right: 67
parameters (69)
    on left: 68 69, on right: 63 65 67
parameter_list_def (70)
    on left: 70 71, on right: 68 70
parameter (71)
    on left: 72 73, on right: 70 71
return_statement (72)
    on left: 74 75 76, on right: 16
function_call (73)
    on left: 77 78 79, on right: 17 30 39
function_call_parameters (74)
    on left: 80 81 82, on right: 77 78 79 80
function_call_datatypes (75)
    on left: 83 84 85 86 87, on right: 80 81


State 0

    0 $accept: . translation_unit $end

    LBRACE           shift, and go to state 1
    SEMICOLON        shift, and go to state 2
    DT_INT           shift, and go to state 3
    DT_BOOL          shift, and go to state 4
    KW_IF            shift, and go to state 5
    KW_FOR           shift, and go to state 6
    KW_WHILE         shift, and go to state 7
    KW_RETURN        shift, and go to state 8
    KW_DEF           shift, and go to state 9
    IDENTIFIER       shift, and go to state 10
    INT_IDENTIFIER   shift, and go to state 11
    BOOL_IDENTIFIER  shift, and go to state 12

    translation_unit        go to state 13
    program                 go to state 14
    compound_statement      go to state 15
    statement               go to state 16
    empty_statement         go to state 17
    declaration             go to state 18
    declaration_assignment  go to state 19
    assignment              go to state 20
    conditional_statement   go to state 21
    loop_statement_for      go to state 22
    loop_statement_while    go to state 23
    function_definition     go to state 24
    return_statement        go to state 25
    function_call           go to state 26


State 1

    5 compound_statement: LBRACE . statement_list RBRACE

    LBRACE           shift, and go to state 1
    SEMICOLON        shift, and go to state 2
    DT_INT           shift, and go to state 3
    DT_BOOL          shift, and go to state 4
    KW_IF            shift, and go to state 5
    KW_FOR           shift, and go to state 6
    KW_WHILE         shift, and go to state 7
    KW_RETURN        shift, and go to state 8
    IDENTIFIER       shift, and go to state 10
    INT_IDENTIFIER   shift, and go to state 11
    BOOL_IDENTIFIER  shift, and go to state 12

    compound_statement      go to state 15
    statement_list          go to state 27
    statement               go to state 28
    empty_statement         go to state 17
    declaration             go to state 18
    declaration_assignment  go to state 19
    assignment              go to state 20
    conditional_statement   go to state 21
    loop_statement_for      go to state 22
    loop_statement_while    go to state 23
    return_statement        go to state 25
    function_call           go to state 26


State 2

   18 empty_statement: SEMICOLON .

    $default  reduce using rule 18 (empty_statement)


State 3

   19 declaration: DT_INT . IDENTIFIER SEMICOLON
   21 declaration_assignment: DT_INT . IDENTIFIER OPR_ASSIGNMENT arithmetic_expression SEMICOLON

    IDENTIFIER  shift, and go to state 29


State 4

   20 declaration: DT_BOOL . IDENTIFIER SEMICOLON
   22 declaration_assignment: DT_BOOL . IDENTIFIER OPR_ASSIGNMENT bool_expressions SEMICOLON

    IDENTIFIER  shift, and go to state 30


State 5

   55 conditional_statement: KW_IF . COLON bool_expressions compound_statement conditional_statement_else_if conditional_statement_else

    COLON  shift, and go to state 31


State 6

   60 loop_statement_for: KW_FOR . COLON IDENTIFIER KW_IN CONST_INT COLON CONST_INT compound_statement

    COLON  shift, and go to state 32


State 7

   61 loop_statement_while: KW_WHILE . COLON bool_expressions compound_statement

    COLON  shift, and go to state 33


State 8

   74 return_statement: KW_RETURN . bool_expressions SEMICOLON
   75                 | KW_RETURN . arithmetic_expression SEMICOLON
   76                 | KW_RETURN . SEMICOLON

    LPAREN           shift, and go to state 34
    OPR_SUB          shift, and go to state 35
    OPR_BW_NOT       shift, and go to state 36
    OPR_LGL_NOT      shift, and go to state 37
    SEMICOLON        shift, and go to state 38
    CONST_INT        shift, and go to state 39
    CONST_BOOL       shift, and go to state 40
    IDENTIFIER       shift, and go to state 10
    INT_IDENTIFIER   shift, and go to state 41
    BOOL_IDENTIFIER  shift, and go to state 42

    bool_expressions       go to state 43
    arithmetic_expression  go to state 44
    boolean_expression     go to state 45
    relational_expression  go to state 46
    logical_expression     go to state 47
    function_call          go to state 48


State 9

   63 function_definition: KW_DEF . IDENTIFIER COLON DT_INT $@1 COLON parameters compound_statement
   65                    | KW_DEF . IDENTIFIER COLON DT_BOOL $@2 COLON parameters compound_statement
   67                    | KW_DEF . IDENTIFIER COLON DT_VOID $@3 COLON parameters compound_statement

    IDENTIFIER  shift, and go to state 49


State 10

   77 function_call: IDENTIFIER . LPAREN function_call_parameters RPAREN

    LPAREN  shift, and go to state 50


State 11

   23 assignment: INT_IDENTIFIER . OPR_ASSIGNMENT arithmetic_expression SEMICOLON
   78 function_call: INT_IDENTIFIER . LPAREN function_call_parameters RPAREN

    LPAREN          shift, and go to state 51
    OPR_ASSIGNMENT  shift, and go to state 52


State 12

   24 assignment: BOOL_IDENTIFIER . OPR_ASSIGNMENT bool_expressions SEMICOLON
   79 function_call: BOOL_IDENTIFIER . LPAREN function_call_parameters RPAREN

    LPAREN          shift, and go to state 53
    OPR_ASSIGNMENT  shift, and go to state 54


State 13

    0 $accept: translation_unit . $end
    2 translation_unit: translation_unit . program

    $end             shift, and go to state 55
    LBRACE           shift, and go to state 1
    SEMICOLON        shift, and go to state 2
    DT_INT           shift, and go to state 3
    DT_BOOL          shift, and go to state 4
    KW_IF            shift, and go to state 5
    KW_FOR           shift, and go to state 6
    KW_WHILE         shift, and go to state 7
    KW_RETURN        shift, and go to state 8
    KW_DEF           shift, and go to state 9
    IDENTIFIER       shift, and go to state 10
    INT_IDENTIFIER   shift, and go to state 11
    BOOL_IDENTIFIER  shift, and go to state 12

    program                 go to state 56
    compound_statement      go to state 15
    statement               go to state 16
    empty_statement         go to state 17
    declaration             go to state 18
    declaration_assignment  go to state 19
    assignment              go to state 20
    conditional_statement   go to state 21
    loop_statement_for      go to state 22
    loop_statement_while    go to state 23
    function_definition     go to state 24
    return_statement        go to state 25
    function_call           go to state 26


State 14

    1 translation_unit: program .

    $default  reduce using rule 1 (translation_unit)


State 15

    8 statement: compound_statement .

    $default  reduce using rule 8 (statement)


State 16

    3 program: statement .

    $default  reduce using rule 3 (program)


State 17

    9 statement: empty_statement .

    $default  reduce using rule 9 (statement)


State 18

   10 statement: declaration .

    $default  reduce using rule 10 (statement)


State 19

   11 statement: declaration_assignment .

    $default  reduce using rule 11 (statement)


State 20

   12 statement: assignment .

    $default  reduce using rule 12 (statement)


State 21

   13 statement: conditional_statement .

    $default  reduce using rule 13 (statement)


State 22

   14 statement: loop_statement_for .

    $default  reduce using rule 14 (statement)


State 23

   15 statement: loop_statement_while .

    $default  reduce using rule 15 (statement)


State 24

    4 program: function_definition .

    $default  reduce using rule 4 (program)


State 25

   16 statement: return_statement .

    $default  reduce using rule 16 (statement)


State 26

   17 statement: function_call . SEMICOLON

    SEMICOLON  shift, and go to state 57


State 27

    5 compound_statement: LBRACE statement_list . RBRACE
    7 statement_list: statement_list . statement

    LBRACE           shift, and go to state 1
    RBRACE           shift, and go to state 58
    SEMICOLON        shift, and go to state 2
    DT_INT           shift, and go to state 3
    DT_BOOL          shift, and go to state 4
    KW_IF            shift, and go to state 5
    KW_FOR           shift, and go to state 6
    KW_WHILE         shift, and go to state 7
    KW_RETURN        shift, and go to state 8
    IDENTIFIER       shift, and go to state 10
    INT_IDENTIFIER   shift, and go to state 11
    BOOL_IDENTIFIER  shift, and go to state 12

    compound_statement      go to state 15
    statement               go to state 59
    empty_statement         go to state 17
    declaration             go to state 18
    declaration_assignment  go to state 19
    assignment              go to state 20
    conditional_statement   go to state 21
    loop_statement_for      go to state 22
    loop_statement_while    go to state 23
    return_statement        go to state 25
    function_call           go to state 26


State 28

    6 statement_list: statement .

    $default  reduce using rule 6 (statement_list)


State 29

   19 declaration: DT_INT IDENTIFIER . SEMICOLON
   21 declaration_assignment: DT_INT IDENTIFIER . OPR_ASSIGNMENT arithmetic_expression SEMICOLON

    OPR_ASSIGNMENT  shift, and go to state 60
    SEMICOLON       shift, and go to state 61


State 30

   20 declaration: DT_BOOL IDENTIFIER . SEMICOLON
   22 declaration_assignment: DT_BOOL IDENTIFIER . OPR_ASSIGNMENT bool_expressions SEMICOLON

    OPR_ASSIGNMENT  shift, and go to state 62
    SEMICOLON       shift, and go to state 63


State 31

   55 conditional_statement: KW_IF COLON . bool_expressions compound_statement conditional_statement_else_if conditional_statement_else

    LPAREN           shift, and go to state 34
    OPR_SUB          shift, and go to state 35
    OPR_BW_NOT       shift, and go to state 36
    OPR_LGL_NOT      shift, and go to state 37
    CONST_INT        shift, and go to state 39
    CONST_BOOL       shift, and go to state 40
    IDENTIFIER       shift, and go to state 10
    INT_IDENTIFIER   shift, and go to state 41
    BOOL_IDENTIFIER  shift, and go to state 42

    bool_expressions       go to state 64
    arithmetic_expression  go to state 65
    boolean_expression     go to state 45
    relational_expression  go to state 46
    logical_expression     go to state 47
    function_call          go to state 48


State 32

   60 loop_statement_for: KW_FOR COLON . IDENTIFIER KW_IN CONST_INT COLON CONST_INT compound_statement

    IDENTIFIER  shift, and go to state 66


State 33

   61 loop_statement_while: KW_WHILE COLON . bool_expressions compound_statement

    LPAREN           shift, and go to state 34
    OPR_SUB          shift, and go to state 35
    OPR_BW_NOT       shift, and go to state 36
    OPR_LGL_NOT      shift, and go to state 37
    CONST_INT        shift, and go to state 39
    CONST_BOOL       shift, and go to state 40
    IDENTIFIER       shift, and go to state 10
    INT_IDENTIFIER   shift, and go to state 41
    BOOL_IDENTIFIER  shift, and go to state 42

    bool_expressions       go to state 67
    arithmetic_expression  go to state 65
    boolean_expression     go to state 45
    relational_expression  go to state 46
    logical_expression     go to state 47
    function_call          go to state 48


State 34

   36 arithmetic_expression: LPAREN . arithmetic_expression RPAREN
   43 boolean_expression: LPAREN . boolean_expression RPAREN
   50 relational_expression: LPAREN . relational_expression RPAREN
   54 logical_expression: LPAREN . logical_expression RPAREN

    LPAREN           shift, and go to state 34
    OPR_SUB          shift, and go to state 35
    OPR_BW_NOT       shift, and go to state 36
    OPR_LGL_NOT      shift, and go to state 37
    CONST_INT        shift, and go to state 39
    CONST_BOOL       shift, and go to state 40
    IDENTIFIER       shift, and go to state 10
    INT_IDENTIFIER   shift, and go to state 41
    BOOL_IDENTIFIER  shift, and go to state 42

    bool_expressions       go to state 68
    arithmetic_expression  go to state 69
    boolean_expression     go to state 70
    relational_expression  go to state 71
    logical_expression     go to state 72
    function_call          go to state 48


State 35

   35 arithmetic_expression: OPR_SUB . arithmetic_expression

    LPAREN           shift, and go to state 73
    OPR_SUB          shift, and go to state 35
    CONST_INT        shift, and go to state 39
    IDENTIFIER       shift, and go to state 10
    INT_IDENTIFIER   shift, and go to state 41
    BOOL_IDENTIFIER  shift, and go to state 74

    arithmetic_expression  go to state 75
    function_call          go to state 76


State 36

   40 boolean_expression: OPR_BW_NOT . boolean_expression

    LPAREN           shift, and go to state 77
    OPR_BW_NOT       shift, and go to state 36
    CONST_BOOL       shift, and go to state 40
    IDENTIFIER       shift, and go to state 10
    INT_IDENTIFIER   shift, and go to state 78
    BOOL_IDENTIFIER  shift, and go to state 42

    boolean_expression  go to state 79
    function_call       go to state 80


State 37

   51 logical_expression: OPR_LGL_NOT . bool_expressions

    LPAREN           shift, and go to state 34
    OPR_SUB          shift, and go to state 35
    OPR_BW_NOT       shift, and go to state 36
    OPR_LGL_NOT      shift, and go to state 37
    CONST_INT        shift, and go to state 39
    CONST_BOOL       shift, and go to state 40
    IDENTIFIER       shift, and go to state 10
    INT_IDENTIFIER   shift, and go to state 41
    BOOL_IDENTIFIER  shift, and go to state 42

    bool_expressions       go to state 81
    arithmetic_expression  go to state 65
    boolean_expression     go to state 45
    relational_expression  go to state 46
    logical_expression     go to state 47
    function_call          go to state 48


State 38

   76 return_statement: KW_RETURN SEMICOLON .

    $default  reduce using rule 76 (return_statement)


State 39

   28 arithmetic_expression: CONST_INT .

    $default  reduce using rule 28 (arithmetic_expression)


State 40

   37 boolean_expression: CONST_BOOL .

    $default  reduce using rule 37 (boolean_expression)


State 41

   29 arithmetic_expression: INT_IDENTIFIER .
   78 function_call: INT_IDENTIFIER . LPAREN function_call_parameters RPAREN

    LPAREN  shift, and go to state 51

    $default  reduce using rule 29 (arithmetic_expression)


State 42

   38 boolean_expression: BOOL_IDENTIFIER .
   79 function_call: BOOL_IDENTIFIER . LPAREN function_call_parameters RPAREN

    LPAREN  shift, and go to state 53

    $default  reduce using rule 38 (boolean_expression)


State 43

   52 logical_expression: bool_expressions . OPR_LGL_AND bool_expressions
   53                   | bool_expressions . OPR_LGL_OR bool_expressions
   74 return_statement: KW_RETURN bool_expressions . SEMICOLON

    OPR_LGL_AND  shift, and go to state 82
    OPR_LGL_OR   shift, and go to state 83
    SEMICOLON    shift, and go to state 84


State 44

   31 arithmetic_expression: arithmetic_expression . OPR_ADD arithmetic_expression
   32                      | arithmetic_expression . OPR_SUB arithmetic_expression
   33                      | arithmetic_expression . OPR_MUL arithmetic_expression
   34                      | arithmetic_expression . OPR_DIV arithmetic_expression
   44 relational_expression: arithmetic_expression . OPR_GT arithmetic_expression
   45                      | arithmetic_expression . OPR_LT arithmetic_expression
   46                      | arithmetic_expression . OPR_EQ arithmetic_expression
   47                      | arithmetic_expression . OPR_NE arithmetic_expression
   48                      | arithmetic_expression . OPR_GE arithmetic_expression
   49                      | arithmetic_expression . OPR_LE arithmetic_expression
   75 return_statement: KW_RETURN arithmetic_expression . SEMICOLON

    OPR_ADD    shift, and go to state 85
    OPR_SUB    shift, and go to state 86
    OPR_MUL    shift, and go to state 87
    OPR_DIV    shift, and go to state 88
    OPR_GT     shift, and go to state 89
    OPR_LT     shift, and go to state 90
    OPR_EQ     shift, and go to state 91
    OPR_NE     shift, and go to state 92
    OPR_GE     shift, and go to state 93
    OPR_LE     shift, and go to state 94
    SEMICOLON  shift, and go to state 95


State 45

   25 bool_expressions: boolean_expression .
   41 boolean_expression: boolean_expression . OPR_BW_AND boolean_expression
   42                   | boolean_expression . OPR_BW_OR boolean_expression

    OPR_BW_AND  shift, and go to state 96
    OPR_BW_OR   shift, and go to state 97

    $default  reduce using rule 25 (bool_expressions)


State 46

   26 bool_expressions: relational_expression .

    $default  reduce using rule 26 (bool_expressions)


State 47

   27 bool_expressions: logical_expression .

    $default  reduce using rule 27 (bool_expressions)


State 48

   30 arithmetic_expression: function_call .
   39 boolean_expression: function_call .

    LBRACE       reduce using rule 39 (boolean_expression)
    RPAREN       reduce using rule 30 (arithmetic_expression)
    RPAREN       [reduce using rule 39 (boolean_expression)]
    OPR_BW_AND   reduce using rule 39 (boolean_expression)
    OPR_BW_OR    reduce using rule 39 (boolean_expression)
    OPR_LGL_AND  reduce using rule 39 (boolean_expression)
    OPR_LGL_OR   reduce using rule 39 (boolean_expression)
    SEMICOLON    reduce using rule 30 (arithmetic_expression)
    SEMICOLON    [reduce using rule 39 (boolean_expression)]
    $default     reduce using rule 30 (arithmetic_expression)


State 49

   63 function_definition: KW_DEF IDENTIFIER . COLON DT_INT $@1 COLON parameters compound_statement
   65                    | KW_DEF IDENTIFIER . COLON DT_BOOL $@2 COLON parameters compound_statement
   67                    | KW_DEF IDENTIFIER . COLON DT_VOID $@3 COLON parameters compound_statement

    COLON  shift, and go to state 98


State 50

   77 function_call: IDENTIFIER LPAREN . function_call_parameters RPAREN

    CONST_INT        shift, and go to state 99
    CONST_BOOL       shift, and go to state 100
    IDENTIFIER       shift, and go to state 101
    INT_IDENTIFIER   shift, and go to state 102
    BOOL_IDENTIFIER  shift, and go to state 103

    $default  reduce using rule 82 (function_call_parameters)

    function_call_parameters  go to state 104
    function_call_datatypes   go to state 105


State 51

   78 function_call: INT_IDENTIFIER LPAREN . function_call_parameters RPAREN

    CONST_INT        shift, and go to state 99
    CONST_BOOL       shift, and go to state 100
    IDENTIFIER       shift, and go to state 101
    INT_IDENTIFIER   shift, and go to state 102
    BOOL_IDENTIFIER  shift, and go to state 103

    $default  reduce using rule 82 (function_call_parameters)

    function_call_parameters  go to state 106
    function_call_datatypes   go to state 105


State 52

   23 assignment: INT_IDENTIFIER OPR_ASSIGNMENT . arithmetic_expression SEMICOLON

    LPAREN           shift, and go to state 73
    OPR_SUB          shift, and go to state 35
    CONST_INT        shift, and go to state 39
    IDENTIFIER       shift, and go to state 10
    INT_IDENTIFIER   shift, and go to state 41
    BOOL_IDENTIFIER  shift, and go to state 74

    arithmetic_expression  go to state 107
    function_call          go to state 76


State 53

   79 function_call: BOOL_IDENTIFIER LPAREN . function_call_parameters RPAREN

    CONST_INT        shift, and go to state 99
    CONST_BOOL       shift, and go to state 100
    IDENTIFIER       shift, and go to state 101
    INT_IDENTIFIER   shift, and go to state 102
    BOOL_IDENTIFIER  shift, and go to state 103

    $default  reduce using rule 82 (function_call_parameters)

    function_call_parameters  go to state 108
    function_call_datatypes   go to state 105


State 54

   24 assignment: BOOL_IDENTIFIER OPR_ASSIGNMENT . bool_expressions SEMICOLON

    LPAREN           shift, and go to state 34
    OPR_SUB          shift, and go to state 35
    OPR_BW_NOT       shift, and go to state 36
    OPR_LGL_NOT      shift, and go to state 37
    CONST_INT        shift, and go to state 39
    CONST_BOOL       shift, and go to state 40
    IDENTIFIER       shift, and go to state 10
    INT_IDENTIFIER   shift, and go to state 41
    BOOL_IDENTIFIER  shift, and go to state 42

    bool_expressions       go to state 109
    arithmetic_expression  go to state 65
    boolean_expression     go to state 45
    relational_expression  go to state 46
    logical_expression     go to state 47
    function_call          go to state 48


State 55

    0 $accept: translation_unit $end .

    $default  accept


State 56

    2 translation_unit: translation_unit program .

    $default  reduce using rule 2 (translation_unit)


State 57

   17 statement: function_call SEMICOLON .

    $default  reduce using rule 17 (statement)


State 58

    5 compound_statement: LBRACE statement_list RBRACE .

    $default  reduce using rule 5 (compound_statement)


State 59

    7 statement_list: statement_list statement .

    $default  reduce using rule 7 (statement_list)


State 60

   21 declaration_assignment: DT_INT IDENTIFIER OPR_ASSIGNMENT . arithmetic_expression SEMICOLON

    LPAREN           shift, and go to state 73
    OPR_SUB          shift, and go to state 35
    CONST_INT        shift, and go to state 39
    IDENTIFIER       shift, and go to state 10
    INT_IDENTIFIER   shift, and go to state 41
    BOOL_IDENTIFIER  shift, and go to state 74

    arithmetic_expression  go to state 110
    function_call          go to state 76


State 61

   19 declaration: DT_INT IDENTIFIER SEMICOLON .

    $default  reduce using rule 19 (declaration)


State 62

   22 declaration_assignment: DT_BOOL IDENTIFIER OPR_ASSIGNMENT . bool_expressions SEMICOLON

    LPAREN           shift, and go to state 34
    OPR_SUB          shift, and go to state 35
    OPR_BW_NOT       shift, and go to state 36
    OPR_LGL_NOT      shift, and go to state 37
    CONST_INT        shift, and go to state 39
    CONST_BOOL       shift, and go to state 40
    IDENTIFIER       shift, and go to state 10
    INT_IDENTIFIER   shift, and go to state 41
    BOOL_IDENTIFIER  shift, and go to state 42

    bool_expressions       go to state 111
    arithmetic_expression  go to state 65
    boolean_expression     go to state 45
    relational_expression  go to state 46
    logical_expression     go to state 47
    function_call          go to state 48


State 63

   20 declaration: DT_BOOL IDENTIFIER SEMICOLON .

    $default  reduce using rule 20 (declaration)


State 64

   52 logical_expression: bool_expressions . OPR_LGL_AND bool_expressions
   53                   | bool_expressions . OPR_LGL_OR bool_expressions
   55 conditional_statement: KW_IF COLON bool_expressions . compound_statement conditional_statement_else_if conditional_statement_else

    LBRACE       shift, and go to state 1
    OPR_LGL_AND  shift, and go to state 82
    OPR_LGL_OR   shift, and go to state 83

    compound_statement  go to state 112


State 65

   31 arithmetic_expression: arithmetic_expression . OPR_ADD arithmetic_expression
   32                      | arithmetic_expression . OPR_SUB arithmetic_expression
   33                      | arithmetic_expression . OPR_MUL arithmetic_expression
   34                      | arithmetic_expression . OPR_DIV arithmetic_expression
   44 relational_expression: arithmetic_expression . OPR_GT arithmetic_expression
   45                      | arithmetic_expression . OPR_LT arithmetic_expression
   46                      | arithmetic_expression . OPR_EQ arithmetic_expression
   47                      | arithmetic_expression . OPR_NE arithmetic_expression
   48                      | arithmetic_expression . OPR_GE arithmetic_expression
   49                      | arithmetic_expression . OPR_LE arithmetic_expression

    OPR_ADD  shift, and go to state 85
    OPR_SUB  shift, and go to state 86
    OPR_MUL  shift, and go to state 87
    OPR_DIV  shift, and go to state 88
    OPR_GT   shift, and go to state 89
    OPR_LT   shift, and go to state 90
    OPR_EQ   shift, and go to state 91
    OPR_NE   shift, and go to state 92
    OPR_GE   shift, and go to state 93
    OPR_LE   shift, and go to state 94


State 66

   60 loop_statement_for: KW_FOR COLON IDENTIFIER . KW_IN CONST_INT COLON CONST_INT compound_statement

    KW_IN  shift, and go to state 113


State 67

   52 logical_expression: bool_expressions . OPR_LGL_AND bool_expressions
   53                   | bool_expressions . OPR_LGL_OR bool_expressions
   61 loop_statement_while: KW_WHILE COLON bool_expressions . compound_statement

    LBRACE       shift, and go to state 1
    OPR_LGL_AND  shift, and go to state 82
    OPR_LGL_OR   shift, and go to state 83

    compound_statement  go to state 114


State 68

   52 logical_expression: bool_expressions . OPR_LGL_AND bool_expressions
   53                   | bool_expressions . OPR_LGL_OR bool_expressions

    OPR_LGL_AND  shift, and go to state 82
    OPR_LGL_OR   shift, and go to state 83


State 69

   31 arithmetic_expression: arithmetic_expression . OPR_ADD arithmetic_expression
   32                      | arithmetic_expression . OPR_SUB arithmetic_expression
   33                      | arithmetic_expression . OPR_MUL arithmetic_expression
   34                      | arithmetic_expression . OPR_DIV arithmetic_expression
   36                      | LPAREN arithmetic_expression . RPAREN
   44 relational_expression: arithmetic_expression . OPR_GT arithmetic_expression
   45                      | arithmetic_expression . OPR_LT arithmetic_expression
   46                      | arithmetic_expression . OPR_EQ arithmetic_expression
   47                      | arithmetic_expression . OPR_NE arithmetic_expression
   48                      | arithmetic_expression . OPR_GE arithmetic_expression
   49                      | arithmetic_expression . OPR_LE arithmetic_expression

    RPAREN   shift, and go to state 115
    OPR_ADD  shift, and go to state 85
    OPR_SUB  shift, and go to state 86
    OPR_MUL  shift, and go to state 87
    OPR_DIV  shift, and go to state 88
    OPR_GT   shift, and go to state 89
    OPR_LT   shift, and go to state 90
    OPR_EQ   shift, and go to state 91
    OPR_NE   shift, and go to state 92
    OPR_GE   shift, and go to state 93
    OPR_LE   shift, and go to state 94


State 70

   25 bool_expressions: boolean_expression .
   41 boolean_expression: boolean_expression . OPR_BW_AND boolean_expression
   42                   | boolean_expression . OPR_BW_OR boolean_expression
   43                   | LPAREN boolean_expression . RPAREN

    RPAREN      shift, and go to state 116
    OPR_BW_AND  shift, and go to state 96
    OPR_BW_OR   shift, and go to state 97

    $default  reduce using rule 25 (bool_expressions)


State 71

   26 bool_expressions: relational_expression .
   50 relational_expression: LPAREN relational_expression . RPAREN

    RPAREN  shift, and go to state 117

    $default  reduce using rule 26 (bool_expressions)


State 72

   27 bool_expressions: logical_expression .
   54 logical_expression: LPAREN logical_expression . RPAREN

    RPAREN  shift, and go to state 118

    $default  reduce using rule 27 (bool_expressions)


State 73

   36 arithmetic_expression: LPAREN . arithmetic_expression RPAREN

    LPAREN           shift, and go to state 73
    OPR_SUB          shift, and go to state 35
    CONST_INT        shift, and go to state 39
    IDENTIFIER       shift, and go to state 10
    INT_IDENTIFIER   shift, and go to state 41
    BOOL_IDENTIFIER  shift, and go to state 74

    arithmetic_expression  go to state 119
    function_call          go to state 76


State 74

   79 function_call: BOOL_IDENTIFIER . LPAREN function_call_parameters RPAREN

    LPAREN  shift, and go to state 53


State 75

   31 arithmetic_expression: arithmetic_expression . OPR_ADD arithmetic_expression
   32                      | arithmetic_expression . OPR_SUB arithmetic_expression
   33                      | arithmetic_expression . OPR_MUL arithmetic_expression
   34                      | arithmetic_expression . OPR_DIV arithmetic_expression
   35                      | OPR_SUB arithmetic_expression .

    $default  reduce using rule 35 (arithmetic_expression)


State 76

   30 arithmetic_expression: function_call .

    $default  reduce using rule 30 (arithmetic_expression)


State 77

   43 boolean_expression: LPAREN . boolean_expression RPAREN

    LPAREN           shift, and go to state 77
    OPR_BW_NOT       shift, and go to state 36
    CONST_BOOL       shift, and go to state 40
    IDENTIFIER       shift, and go to state 10
    INT_IDENTIFIER   shift, and go to state 78
    BOOL_IDENTIFIER  shift, and go to state 42

    boolean_expression  go to state 120
    function_call       go to state 80


State 78

   78 function_call: INT_IDENTIFIER . LPAREN function_call_parameters RPAREN

    LPAREN  shift, and go to state 51


State 79

   40 boolean_expression: OPR_BW_NOT boolean_expression .
   41                   | boolean_expression . OPR_BW_AND boolean_expression
   42                   | boolean_expression . OPR_BW_OR boolean_expression

    $default  reduce using rule 40 (boolean_expression)


State 80

   39 boolean_expression: function_call .

    $default  reduce using rule 39 (boolean_expression)


State 81

   51 logical_expression: OPR_LGL_NOT bool_expressions .
   52                   | bool_expressions . OPR_LGL_AND bool_expressions
   53                   | bool_expressions . OPR_LGL_OR bool_expressions

    $default  reduce using rule 51 (logical_expression)


State 82

   52 logical_expression: bool_expressions OPR_LGL_AND . bool_expressions

    LPAREN           shift, and go to state 34
    OPR_SUB          shift, and go to state 35
    OPR_BW_NOT       shift, and go to state 36
    OPR_LGL_NOT      shift, and go to state 37
    CONST_INT        shift, and go to state 39
    CONST_BOOL       shift, and go to state 40
    IDENTIFIER       shift, and go to state 10
    INT_IDENTIFIER   shift, and go to state 41
    BOOL_IDENTIFIER  shift, and go to state 42

    bool_expressions       go to state 121
    arithmetic_expression  go to state 65
    boolean_expression     go to state 45
    relational_expression  go to state 46
    logical_expression     go to state 47
    function_call          go to state 48


State 83

   53 logical_expression: bool_expressions OPR_LGL_OR . bool_expressions

    LPAREN           shift, and go to state 34
    OPR_SUB          shift, and go to state 35
    OPR_BW_NOT       shift, and go to state 36
    OPR_LGL_NOT      shift, and go to state 37
    CONST_INT        shift, and go to state 39
    CONST_BOOL       shift, and go to state 40
    IDENTIFIER       shift, and go to state 10
    INT_IDENTIFIER   shift, and go to state 41
    BOOL_IDENTIFIER  shift, and go to state 42

    bool_expressions       go to state 122
    arithmetic_expression  go to state 65
    boolean_expression     go to state 45
    relational_expression  go to state 46
    logical_expression     go to state 47
    function_call          go to state 48


State 84

   74 return_statement: KW_RETURN bool_expressions SEMICOLON .

    $default  reduce using rule 74 (return_statement)


State 85

   31 arithmetic_expression: arithmetic_expression OPR_ADD . arithmetic_expression

    LPAREN           shift, and go to state 73
    OPR_SUB          shift, and go to state 35
    CONST_INT        shift, and go to state 39
    IDENTIFIER       shift, and go to state 10
    INT_IDENTIFIER   shift, and go to state 41
    BOOL_IDENTIFIER  shift, and go to state 74

    arithmetic_expression  go to state 123
    function_call          go to state 76


State 86

   32 arithmetic_expression: arithmetic_expression OPR_SUB . arithmetic_expression

    LPAREN           shift, and go to state 73
    OPR_SUB          shift, and go to state 35
    CONST_INT        shift, and go to state 39
    IDENTIFIER       shift, and go to state 10
    INT_IDENTIFIER   shift, and go to state 41
    BOOL_IDENTIFIER  shift, and go to state 74

    arithmetic_expression  go to state 124
    function_call          go to state 76


State 87

   33 arithmetic_expression: arithmetic_expression OPR_MUL . arithmetic_expression

    LPAREN           shift, and go to state 73
    OPR_SUB          shift, and go to state 35
    CONST_INT        shift, and go to state 39
    IDENTIFIER       shift, and go to state 10
    INT_IDENTIFIER   shift, and go to state 41
    BOOL_IDENTIFIER  shift, and go to state 74

    arithmetic_expression  go to state 125
    function_call          go to state 76


State 88

   34 arithmetic_expression: arithmetic_expression OPR_DIV . arithmetic_expression

    LPAREN           shift, and go to state 73
    OPR_SUB          shift, and go to state 35
    CONST_INT        shift, and go to state 39
    IDENTIFIER       shift, and go to state 10
    INT_IDENTIFIER   shift, and go to state 41
    BOOL_IDENTIFIER  shift, and go to state 74

    arithmetic_expression  go to state 126
    function_call          go to state 76


State 89

   44 relational_expression: arithmetic_expression OPR_GT . arithmetic_expression

    LPAREN           shift, and go to state 73
    OPR_SUB          shift, and go to state 35
    CONST_INT        shift, and go to state 39
    IDENTIFIER       shift, and go to state 10
    INT_IDENTIFIER   shift, and go to state 41
    BOOL_IDENTIFIER  shift, and go to state 74

    arithmetic_expression  go to state 127
    function_call          go to state 76


State 90

   45 relational_expression: arithmetic_expression OPR_LT . arithmetic_expression

    LPAREN           shift, and go to state 73
    OPR_SUB          shift, and go to state 35
    CONST_INT        shift, and go to state 39
    IDENTIFIER       shift, and go to state 10
    INT_IDENTIFIER   shift, and go to state 41
    BOOL_IDENTIFIER  shift, and go to state 74

    arithmetic_expression  go to state 128
    function_call          go to state 76


State 91

   46 relational_expression: arithmetic_expression OPR_EQ . arithmetic_expression

    LPAREN           shift, and go to state 73
    OPR_SUB          shift, and go to state 35
    CONST_INT        shift, and go to state 39
    IDENTIFIER       shift, and go to state 10
    INT_IDENTIFIER   shift, and go to state 41
    BOOL_IDENTIFIER  shift, and go to state 74

    arithmetic_expression  go to state 129
    function_call          go to state 76


State 92

   47 relational_expression: arithmetic_expression OPR_NE . arithmetic_expression

    LPAREN           shift, and go to state 73
    OPR_SUB          shift, and go to state 35
    CONST_INT        shift, and go to state 39
    IDENTIFIER       shift, and go to state 10
    INT_IDENTIFIER   shift, and go to state 41
    BOOL_IDENTIFIER  shift, and go to state 74

    arithmetic_expression  go to state 130
    function_call          go to state 76


State 93

   48 relational_expression: arithmetic_expression OPR_GE . arithmetic_expression

    LPAREN           shift, and go to state 73
    OPR_SUB          shift, and go to state 35
    CONST_INT        shift, and go to state 39
    IDENTIFIER       shift, and go to state 10
    INT_IDENTIFIER   shift, and go to state 41
    BOOL_IDENTIFIER  shift, and go to state 74

    arithmetic_expression  go to state 131
    function_call          go to state 76


State 94

   49 relational_expression: arithmetic_expression OPR_LE . arithmetic_expression

    LPAREN           shift, and go to state 73
    OPR_SUB          shift, and go to state 35
    CONST_INT        shift, and go to state 39
    IDENTIFIER       shift, and go to state 10
    INT_IDENTIFIER   shift, and go to state 41
    BOOL_IDENTIFIER  shift, and go to state 74

    arithmetic_expression  go to state 132
    function_call          go to state 76


State 95

   75 return_statement: KW_RETURN arithmetic_expression SEMICOLON .

    $default  reduce using rule 75 (return_statement)


State 96

   41 boolean_expression: boolean_expression OPR_BW_AND . boolean_expression

    LPAREN           shift, and go to state 77
    OPR_BW_NOT       shift, and go to state 36
    CONST_BOOL       shift, and go to state 40
    IDENTIFIER       shift, and go to state 10
    INT_IDENTIFIER   shift, and go to state 78
    BOOL_IDENTIFIER  shift, and go to state 42

    boolean_expression  go to state 133
    function_call       go to state 80


State 97

   42 boolean_expression: boolean_expression OPR_BW_OR . boolean_expression

    LPAREN           shift, and go to state 77
    OPR_BW_NOT       shift, and go to state 36
    CONST_BOOL       shift, and go to state 40
    IDENTIFIER       shift, and go to state 10
    INT_IDENTIFIER   shift, and go to state 78
    BOOL_IDENTIFIER  shift, and go to state 42

    boolean_expression  go to state 134
    function_call       go to state 80


State 98

   63 function_definition: KW_DEF IDENTIFIER COLON . DT_INT $@1 COLON parameters compound_statement
   65                    | KW_DEF IDENTIFIER COLON . DT_BOOL $@2 COLON parameters compound_statement
   67                    | KW_DEF IDENTIFIER COLON . DT_VOID $@3 COLON parameters compound_statement

    DT_INT   shift, and go to state 135
    DT_BOOL  shift, and go to state 136
    DT_VOID  shift, and go to state 137


State 99

   86 function_call_datatypes: CONST_INT .

    $default  reduce using rule 86 (function_call_datatypes)


State 100

   87 function_call_datatypes: CONST_BOOL .

    $default  reduce using rule 87 (function_call_datatypes)


State 101

   83 function_call_datatypes: IDENTIFIER .

    $default  reduce using rule 83 (function_call_datatypes)


State 102

   84 function_call_datatypes: INT_IDENTIFIER .

    $default  reduce using rule 84 (function_call_datatypes)


State 103

   85 function_call_datatypes: BOOL_IDENTIFIER .

    $default  reduce using rule 85 (function_call_datatypes)


State 104

   77 function_call: IDENTIFIER LPAREN function_call_parameters . RPAREN
   80 function_call_parameters: function_call_parameters . COMMA function_call_datatypes

    RPAREN  shift, and go to state 138
    COMMA   shift, and go to state 139


State 105

   81 function_call_parameters: function_call_datatypes .

    $default  reduce using rule 81 (function_call_parameters)


State 106

   78 function_call: INT_IDENTIFIER LPAREN function_call_parameters . RPAREN
   80 function_call_parameters: function_call_parameters . COMMA function_call_datatypes

    RPAREN  shift, and go to state 140
    COMMA   shift, and go to state 139


State 107

   23 assignment: INT_IDENTIFIER OPR_ASSIGNMENT arithmetic_expression . SEMICOLON
   31 arithmetic_expression: arithmetic_expression . OPR_ADD arithmetic_expression
   32                      | arithmetic_expression . OPR_SUB arithmetic_expression
   33                      | arithmetic_expression . OPR_MUL arithmetic_expression
   34                      | arithmetic_expression . OPR_DIV arithmetic_expression

    OPR_ADD    shift, and go to state 85
    OPR_SUB    shift, and go to state 86
    OPR_MUL    shift, and go to state 87
    OPR_DIV    shift, and go to state 88
    SEMICOLON  shift, and go to state 141


State 108

   79 function_call: BOOL_IDENTIFIER LPAREN function_call_parameters . RPAREN
   80 function_call_parameters: function_call_parameters . COMMA function_call_datatypes

    RPAREN  shift, and go to state 142
    COMMA   shift, and go to state 139


State 109

   24 assignment: BOOL_IDENTIFIER OPR_ASSIGNMENT bool_expressions . SEMICOLON
   52 logical_expression: bool_expressions . OPR_LGL_AND bool_expressions
   53                   | bool_expressions . OPR_LGL_OR bool_expressions

    OPR_LGL_AND  shift, and go to state 82
    OPR_LGL_OR   shift, and go to state 83
    SEMICOLON    shift, and go to state 143


State 110

   21 declaration_assignment: DT_INT IDENTIFIER OPR_ASSIGNMENT arithmetic_expression . SEMICOLON
   31 arithmetic_expression: arithmetic_expression . OPR_ADD arithmetic_expression
   32                      | arithmetic_expression . OPR_SUB arithmetic_expression
   33                      | arithmetic_expression . OPR_MUL arithmetic_expression
   34                      | arithmetic_expression . OPR_DIV arithmetic_expression

    OPR_ADD    shift, and go to state 85
    OPR_SUB    shift, and go to state 86
    OPR_MUL    shift, and go to state 87
    OPR_DIV    shift, and go to state 88
    SEMICOLON  shift, and go to state 144


State 111

   22 declaration_assignment: DT_BOOL IDENTIFIER OPR_ASSIGNMENT bool_expressions . SEMICOLON
   52 logical_expression: bool_expressions . OPR_LGL_AND bool_expressions
   53                   | bool_expressions . OPR_LGL_OR bool_expressions

    OPR_LGL_AND  shift, and go to state 82
    OPR_LGL_OR   shift, and go to state 83
    SEMICOLON    shift, and go to state 145


State 112

   55 conditional_statement: KW_IF COLON bool_expressions compound_statement . conditional_statement_else_if conditional_statement_else

    $default  reduce using rule 57 (conditional_statement_else_if)

    conditional_statement_else_if  go to state 146


State 113

   60 loop_statement_for: KW_FOR COLON IDENTIFIER KW_IN . CONST_INT COLON CONST_INT compound_statement

    CONST_INT  shift, and go to state 147


State 114

   61 loop_statement_while: KW_WHILE COLON bool_expressions compound_statement .

    $default  reduce using rule 61 (loop_statement_while)


State 115

   36 arithmetic_expression: LPAREN arithmetic_expression RPAREN .

    $default  reduce using rule 36 (arithmetic_expression)


State 116

   43 boolean_expression: LPAREN boolean_expression RPAREN .

    $default  reduce using rule 43 (boolean_expression)


State 117

   50 relational_expression: LPAREN relational_expression RPAREN .

    $default  reduce using rule 50 (relational_expression)


State 118

   54 logical_expression: LPAREN logical_expression RPAREN .

    $default  reduce using rule 54 (logical_expression)


State 119

   31 arithmetic_expression: arithmetic_expression . OPR_ADD arithmetic_expression
   32                      | arithmetic_expression . OPR_SUB arithmetic_expression
   33                      | arithmetic_expression . OPR_MUL arithmetic_expression
   34                      | arithmetic_expression . OPR_DIV arithmetic_expression
   36                      | LPAREN arithmetic_expression . RPAREN

    RPAREN   shift, and go to state 115
    OPR_ADD  shift, and go to state 85
    OPR_SUB  shift, and go to state 86
    OPR_MUL  shift, and go to state 87
    OPR_DIV  shift, and go to state 88


State 120

   41 boolean_expression: boolean_expression . OPR_BW_AND boolean_expression
   42                   | boolean_expression . OPR_BW_OR boolean_expression
   43                   | LPAREN boolean_expression . RPAREN

    RPAREN      shift, and go to state 116
    OPR_BW_AND  shift, and go to state 96
    OPR_BW_OR   shift, and go to state 97


State 121

   52 logical_expression: bool_expressions . OPR_LGL_AND bool_expressions
   52                   | bool_expressions OPR_LGL_AND bool_expressions .
   53                   | bool_expressions . OPR_LGL_OR bool_expressions

    $default  reduce using rule 52 (logical_expression)


State 122

   52 logical_expression: bool_expressions . OPR_LGL_AND bool_expressions
   53                   | bool_expressions . OPR_LGL_OR bool_expressions
   53                   | bool_expressions OPR_LGL_OR bool_expressions .

    $default  reduce using rule 53 (logical_expression)


State 123

   31 arithmetic_expression: arithmetic_expression . OPR_ADD arithmetic_expression
   31                      | arithmetic_expression OPR_ADD arithmetic_expression .
   32                      | arithmetic_expression . OPR_SUB arithmetic_expression
   33                      | arithmetic_expression . OPR_MUL arithmetic_expression
   34                      | arithmetic_expression . OPR_DIV arithmetic_expression

    OPR_MUL  shift, and go to state 87
    OPR_DIV  shift, and go to state 88

    $default  reduce using rule 31 (arithmetic_expression)


State 124

   31 arithmetic_expression: arithmetic_expression . OPR_ADD arithmetic_expression
   32                      | arithmetic_expression . OPR_SUB arithmetic_expression
   32                      | arithmetic_expression OPR_SUB arithmetic_expression .
   33                      | arithmetic_expression . OPR_MUL arithmetic_expression
   34                      | arithmetic_expression . OPR_DIV arithmetic_expression

    OPR_MUL  shift, and go to state 87
    OPR_DIV  shift, and go to state 88

    $default  reduce using rule 32 (arithmetic_expression)


State 125

   31 arithmetic_expression: arithmetic_expression . OPR_ADD arithmetic_expression
   32                      | arithmetic_expression . OPR_SUB arithmetic_expression
   33                      | arithmetic_expression . OPR_MUL arithmetic_expression
   33                      | arithmetic_expression OPR_MUL arithmetic_expression .
   34                      | arithmetic_expression . OPR_DIV arithmetic_expression

    $default  reduce using rule 33 (arithmetic_expression)


State 126

   31 arithmetic_expression: arithmetic_expression . OPR_ADD arithmetic_expression
   32                      | arithmetic_expression . OPR_SUB arithmetic_expression
   33                      | arithmetic_expression . OPR_MUL arithmetic_expression
   34                      | arithmetic_expression . OPR_DIV arithmetic_expression
   34                      | arithmetic_expression OPR_DIV arithmetic_expression .

    $default  reduce using rule 34 (arithmetic_expression)


State 127

   31 arithmetic_expression: arithmetic_expression . OPR_ADD arithmetic_expression
   32                      | arithmetic_expression . OPR_SUB arithmetic_expression
   33                      | arithmetic_expression . OPR_MUL arithmetic_expression
   34                      | arithmetic_expression . OPR_DIV arithmetic_expression
   44 relational_expression: arithmetic_expression OPR_GT arithmetic_expression .

    OPR_ADD  shift, and go to state 85
    OPR_SUB  shift, and go to state 86
    OPR_MUL  shift, and go to state 87
    OPR_DIV  shift, and go to state 88

    $default  reduce using rule 44 (relational_expression)


State 128

   31 arithmetic_expression: arithmetic_expression . OPR_ADD arithmetic_expression
   32                      | arithmetic_expression . OPR_SUB arithmetic_expression
   33                      | arithmetic_expression . OPR_MUL arithmetic_expression
   34                      | arithmetic_expression . OPR_DIV arithmetic_expression
   45 relational_expression: arithmetic_expression OPR_LT arithmetic_expression .

    OPR_ADD  shift, and go to state 85
    OPR_SUB  shift, and go to state 86
    OPR_MUL  shift, and go to state 87
    OPR_DIV  shift, and go to state 88

    $default  reduce using rule 45 (relational_expression)


State 129

   31 arithmetic_expression: arithmetic_expression . OPR_ADD arithmetic_expression
   32                      | arithmetic_expression . OPR_SUB arithmetic_expression
   33                      | arithmetic_expression . OPR_MUL arithmetic_expression
   34                      | arithmetic_expression . OPR_DIV arithmetic_expression
   46 relational_expression: arithmetic_expression OPR_EQ arithmetic_expression .

    OPR_ADD  shift, and go to state 85
    OPR_SUB  shift, and go to state 86
    OPR_MUL  shift, and go to state 87
    OPR_DIV  shift, and go to state 88

    $default  reduce using rule 46 (relational_expression)


State 130

   31 arithmetic_expression: arithmetic_expression . OPR_ADD arithmetic_expression
   32                      | arithmetic_expression . OPR_SUB arithmetic_expression
   33                      | arithmetic_expression . OPR_MUL arithmetic_expression
   34                      | arithmetic_expression . OPR_DIV arithmetic_expression
   47 relational_expression: arithmetic_expression OPR_NE arithmetic_expression .

    OPR_ADD  shift, and go to state 85
    OPR_SUB  shift, and go to state 86
    OPR_MUL  shift, and go to state 87
    OPR_DIV  shift, and go to state 88

    $default  reduce using rule 47 (relational_expression)


State 131

   31 arithmetic_expression: arithmetic_expression . OPR_ADD arithmetic_expression
   32                      | arithmetic_expression . OPR_SUB arithmetic_expression
   33                      | arithmetic_expression . OPR_MUL arithmetic_expression
   34                      | arithmetic_expression . OPR_DIV arithmetic_expression
   48 relational_expression: arithmetic_expression OPR_GE arithmetic_expression .

    OPR_ADD  shift, and go to state 85
    OPR_SUB  shift, and go to state 86
    OPR_MUL  shift, and go to state 87
    OPR_DIV  shift, and go to state 88

    $default  reduce using rule 48 (relational_expression)


State 132

   31 arithmetic_expression: arithmetic_expression . OPR_ADD arithmetic_expression
   32                      | arithmetic_expression . OPR_SUB arithmetic_expression
   33                      | arithmetic_expression . OPR_MUL arithmetic_expression
   34                      | arithmetic_expression . OPR_DIV arithmetic_expression
   49 relational_expression: arithmetic_expression OPR_LE arithmetic_expression .

    OPR_ADD  shift, and go to state 85
    OPR_SUB  shift, and go to state 86
    OPR_MUL  shift, and go to state 87
    OPR_DIV  shift, and go to state 88

    $default  reduce using rule 49 (relational_expression)


State 133

   41 boolean_expression: boolean_expression . OPR_BW_AND boolean_expression
   41                   | boolean_expression OPR_BW_AND boolean_expression .
   42                   | boolean_expression . OPR_BW_OR boolean_expression

    $default  reduce using rule 41 (boolean_expression)


State 134

   41 boolean_expression: boolean_expression . OPR_BW_AND boolean_expression
   42                   | boolean_expression . OPR_BW_OR boolean_expression
   42                   | boolean_expression OPR_BW_OR boolean_expression .

    $default  reduce using rule 42 (boolean_expression)


State 135

   63 function_definition: KW_DEF IDENTIFIER COLON DT_INT . $@1 COLON parameters compound_statement

    $default  reduce using rule 62 ($@1)

    $@1  go to state 148


State 136

   65 function_definition: KW_DEF IDENTIFIER COLON DT_BOOL . $@2 COLON parameters compound_statement

    $default  reduce using rule 64 ($@2)

    $@2  go to state 149


State 137

   67 function_definition: KW_DEF IDENTIFIER COLON DT_VOID . $@3 COLON parameters compound_statement

    $default  reduce using rule 66 ($@3)

    $@3  go to state 150


State 138

   77 function_call: IDENTIFIER LPAREN function_call_parameters RPAREN .

    $default  reduce using rule 77 (function_call)


State 139

   80 function_call_parameters: function_call_parameters COMMA . function_call_datatypes

    CONST_INT        shift, and go to state 99
    CONST_BOOL       shift, and go to state 100
    IDENTIFIER       shift, and go to state 101
    INT_IDENTIFIER   shift, and go to state 102
    BOOL_IDENTIFIER  shift, and go to state 103

    function_call_datatypes  go to state 151


State 140

   78 function_call: INT_IDENTIFIER LPAREN function_call_parameters RPAREN .

    $default  reduce using rule 78 (function_call)


State 141

   23 assignment: INT_IDENTIFIER OPR_ASSIGNMENT arithmetic_expression SEMICOLON .

    $default  reduce using rule 23 (assignment)


State 142

   79 function_call: BOOL_IDENTIFIER LPAREN function_call_parameters RPAREN .

    $default  reduce using rule 79 (function_call)


State 143

   24 assignment: BOOL_IDENTIFIER OPR_ASSIGNMENT bool_expressions SEMICOLON .

    $default  reduce using rule 24 (assignment)


State 144

   21 declaration_assignment: DT_INT IDENTIFIER OPR_ASSIGNMENT arithmetic_expression SEMICOLON .

    $default  reduce using rule 21 (declaration_assignment)


State 145

   22 declaration_assignment: DT_BOOL IDENTIFIER OPR_ASSIGNMENT bool_expressions SEMICOLON .

    $default  reduce using rule 22 (declaration_assignment)


State 146

   55 conditional_statement: KW_IF COLON bool_expressions compound_statement conditional_statement_else_if . conditional_statement_else
   56 conditional_statement_else_if: conditional_statement_else_if . KW_ELIF COLON bool_expressions compound_statement

    KW_ELIF  shift, and go to state 152
    KW_ELSE  shift, and go to state 153

    $default  reduce using rule 59 (conditional_statement_else)

    conditional_statement_else  go to state 154


State 147

   60 loop_statement_for: KW_FOR COLON IDENTIFIER KW_IN CONST_INT . COLON CONST_INT compound_statement

    COLON  shift, and go to state 155


State 148

   63 function_definition: KW_DEF IDENTIFIER COLON DT_INT $@1 . COLON parameters compound_statement

    COLON  shift, and go to state 156


State 149

   65 function_definition: KW_DEF IDENTIFIER COLON DT_BOOL $@2 . COLON parameters compound_statement

    COLON  shift, and go to state 157


State 150

   67 function_definition: KW_DEF IDENTIFIER COLON DT_VOID $@3 . COLON parameters compound_statement

    COLON  shift, and go to state 158


State 151

   80 function_call_parameters: function_call_parameters COMMA function_call_datatypes .

    $default  reduce using rule 80 (function_call_parameters)


State 152

   56 conditional_statement_else_if: conditional_statement_else_if KW_ELIF . COLON bool_expressions compound_statement

    COLON  shift, and go to state 159


State 153

   58 conditional_statement_else: KW_ELSE . compound_statement

    LBRACE  shift, and go to state 1

    compound_statement  go to state 160


State 154

   55 conditional_statement: KW_IF COLON bool_expressions compound_statement conditional_statement_else_if conditional_statement_else .

    $default  reduce using rule 55 (conditional_statement)


State 155

   60 loop_statement_for: KW_FOR COLON IDENTIFIER KW_IN CONST_INT COLON . CONST_INT compound_statement

    CONST_INT  shift, and go to state 161


State 156

   63 function_definition: KW_DEF IDENTIFIER COLON DT_INT $@1 COLON . parameters compound_statement

    DT_INT   shift, and go to state 162
    DT_BOOL  shift, and go to state 163

    $default  reduce using rule 69 (parameters)

    parameters          go to state 164
    parameter_list_def  go to state 165
    parameter           go to state 166


State 157

   65 function_definition: KW_DEF IDENTIFIER COLON DT_BOOL $@2 COLON . parameters compound_statement

    DT_INT   shift, and go to state 162
    DT_BOOL  shift, and go to state 163

    $default  reduce using rule 69 (parameters)

    parameters          go to state 167
    parameter_list_def  go to state 165
    parameter           go to state 166


State 158

   67 function_definition: KW_DEF IDENTIFIER COLON DT_VOID $@3 COLON . parameters compound_statement

    DT_INT   shift, and go to state 162
    DT_BOOL  shift, and go to state 163

    $default  reduce using rule 69 (parameters)

    parameters          go to state 168
    parameter_list_def  go to state 165
    parameter           go to state 166


State 159

   56 conditional_statement_else_if: conditional_statement_else_if KW_ELIF COLON . bool_expressions compound_statement

    LPAREN           shift, and go to state 34
    OPR_SUB          shift, and go to state 35
    OPR_BW_NOT       shift, and go to state 36
    OPR_LGL_NOT      shift, and go to state 37
    CONST_INT        shift, and go to state 39
    CONST_BOOL       shift, and go to state 40
    IDENTIFIER       shift, and go to state 10
    INT_IDENTIFIER   shift, and go to state 41
    BOOL_IDENTIFIER  shift, and go to state 42

    bool_expressions       go to state 169
    arithmetic_expression  go to state 65
    boolean_expression     go to state 45
    relational_expression  go to state 46
    logical_expression     go to state 47
    function_call          go to state 48


State 160

   58 conditional_statement_else: KW_ELSE compound_statement .

    $default  reduce using rule 58 (conditional_statement_else)


State 161

   60 loop_statement_for: KW_FOR COLON IDENTIFIER KW_IN CONST_INT COLON CONST_INT . compound_statement

    LBRACE  shift, and go to state 1

    compound_statement  go to state 170


State 162

   72 parameter: DT_INT . IDENTIFIER

    IDENTIFIER  shift, and go to state 171


State 163

   73 parameter: DT_BOOL . IDENTIFIER

    IDENTIFIER  shift, and go to state 172


State 164

   63 function_definition: KW_DEF IDENTIFIER COLON DT_INT $@1 COLON parameters . compound_statement

    LBRACE  shift, and go to state 1

    compound_statement  go to state 173


State 165

   68 parameters: parameter_list_def .
   70 parameter_list_def: parameter_list_def . COMMA parameter

    COMMA  shift, and go to state 174

    $default  reduce using rule 68 (parameters)


State 166

   71 parameter_list_def: parameter .

    $default  reduce using rule 71 (parameter_list_def)


State 167

   65 function_definition: KW_DEF IDENTIFIER COLON DT_BOOL $@2 COLON parameters . compound_statement

    LBRACE  shift, and go to state 1

    compound_statement  go to state 175


State 168

   67 function_definition: KW_DEF IDENTIFIER COLON DT_VOID $@3 COLON parameters . compound_statement

    LBRACE  shift, and go to state 1

    compound_statement  go to state 176


State 169

   52 logical_expression: bool_expressions . OPR_LGL_AND bool_expressions
   53                   | bool_expressions . OPR_LGL_OR bool_expressions
   56 conditional_statement_else_if: conditional_statement_else_if KW_ELIF COLON bool_expressions . compound_statement

    LBRACE       shift, and go to state 1
    OPR_LGL_AND  shift, and go to state 82
    OPR_LGL_OR   shift, and go to state 83

    compound_statement  go to state 177


State 170

   60 loop_statement_for: KW_FOR COLON IDENTIFIER KW_IN CONST_INT COLON CONST_INT compound_statement .

    $default  reduce using rule 60 (loop_statement_for)


State 171

   72 parameter: DT_INT IDENTIFIER .

    $default  reduce using rule 72 (parameter)


State 172

   73 parameter: DT_BOOL IDENTIFIER .

    $default  reduce using rule 73 (parameter)


State 173

   63 function_definition: KW_DEF IDENTIFIER COLON DT_INT $@1 COLON parameters compound_statement .

    $default  reduce using rule 63 (function_definition)


State 174

   70 parameter_list_def: parameter_list_def COMMA . parameter

    DT_INT   shift, and go to state 162
    DT_BOOL  shift, and go to state 163

    parameter  go to state 178


State 175

   65 function_definition: KW_DEF IDENTIFIER COLON DT_BOOL $@2 COLON parameters compound_statement .

    $default  reduce using rule 65 (function_definition)


State 176

   67 function_definition: KW_DEF IDENTIFIER COLON DT_VOID $@3 COLON parameters compound_statement .

    $default  reduce using rule 67 (function_definition)


State 177

   56 conditional_statement_else_if: conditional_statement_else_if KW_ELIF COLON bool_expressions compound_statement .

    $default  reduce using rule 56 (conditional_statement_else_if)


State 178

   70 parameter_list_def: parameter_list_def COMMA parameter .

    $default  reduce using rule 70 (parameter_list_def)
