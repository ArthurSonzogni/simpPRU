/* variable declaration */
int abv;
{int abv;}

/* variable declaration and assignment */
bool test := ~true & true & true;
int num1 := 4;
int af := (32*(3+3));
int abc:= -3 - (3-9) + num1;
int assign := af;
bool dfsddx := test;
bool a:= true and 1 > 3 or (~dfsddx & true);
bool test2:= ((1+4) > 3) and  (false or true);
bool rel := af != abc;

/* variable assignment */
af := (32*(3+4));
abc:= -3 -(3-9);
a:= true and 1 > 3 or (false & true);
test:= ((1+4) > 3) and  (false or true);
bool adf;
adf:=test;

/* self assignment */
int a_cou := 1;
int sum := 4;
sum := sum + a_cou;

/* if else */
if : 3>2 {
    int a:= 3 +4;
}
else {
    int b:=(3+4)*2;
}

/* if */
if : 4!=2 {
    bool sh := true;
}

/* if else nested */
if : 3>2 {
    int a:= 3 +8;
    if : 4=4 {
        bool te := false;
    }
    else {
        int rt := 334;
    }
}
else {
    int b:=(3+4)*2;
}

/* if elif else */
if : 3>2 {
    int ax:= 3 +4;
}
elif : 3 != 4 {
    int b:=(3+4)*2;
}
elif : 4 != 3 {
    int sec:= 99;
}
else {
    bool af3:=true;
}

/* for loop */
for : iota in 1:3 {
    int a:= 11;
}

/* while loop */
while : 3 = 3 {
    int rt := 90;
}

/* nested and complex loops */
for : o in 2:4 {
    for : h in 5:1 {
        if : 2>3 {
            int a ;
        }
    }
    while : 3>4 {
        if : 4=3 {
            ;
        }
    }
}

while : 4 < 5 {
    for : jh in 4 : 9 {
        bool nm := true;
    }
}

/* function definitions */
def test_func : int : int rtpo , bool rty, int yy{
    int we := 44;

    while : 4 > 5 {
        bool inr := true;
    }
    
    for : count in 3:4 {
        int for_inside := 44;
    }

    return we;
}

def tt : bool : int r {
    ;
}

def tt_ : void : int r {
    ;
}

/* function call */
tt(tt());
tt_();
int f_c := -3 - (3-9) + test_func(1) + num1;
bool f_c_b := true and 1 > 3 or (~tt(1) & true);
